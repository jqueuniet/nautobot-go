/*
API Documentation

Source of truth and network automation platform

API version: 1.3.10b1 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VirtualMachineWithConfigContext Mixin to add `status` choice field to model serializers.
type VirtualMachineWithConfigContext struct {
	Id string `json:"id"`
	Url string `json:"url"`
	Name string `json:"name"`
	Status VirtualMachineWithConfigContextStatus `json:"status"`
	Site PatchedWritableVirtualMachineWithConfigContextSite `json:"site"`
	Cluster NestedCluster `json:"cluster"`
	Role NullableVirtualMachineWithConfigContextRole `json:"role,omitempty"`
	Tenant NullableAggregateTenant `json:"tenant,omitempty"`
	Platform NullableDevicePlatform `json:"platform,omitempty"`
	PrimaryIp DevicePrimaryIp `json:"primary_ip"`
	PrimaryIp4 NullableDevicePrimaryIp4 `json:"primary_ip4,omitempty"`
	PrimaryIp6 NullableDevicePrimaryIp4 `json:"primary_ip6,omitempty"`
	Vcpus NullableInt32 `json:"vcpus,omitempty"`
	Memory NullableInt32 `json:"memory,omitempty"`
	Disk NullableInt32 `json:"disk,omitempty"`
	Comments *string `json:"comments,omitempty"`
	LocalContextData map[string]interface{} `json:"local_context_data,omitempty"`
	LocalContextSchema NullableConfigContextSchema `json:"local_context_schema,omitempty"`
	Tags []TagSerializerField `json:"tags,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	ConfigContext map[string]interface{} `json:"config_context"`
	Created string `json:"created"`
	LastUpdated time.Time `json:"last_updated"`
	// Human friendly display value
	Display string `json:"display"`
}

// NewVirtualMachineWithConfigContext instantiates a new VirtualMachineWithConfigContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualMachineWithConfigContext(id string, url string, name string, status VirtualMachineWithConfigContextStatus, site PatchedWritableVirtualMachineWithConfigContextSite, cluster NestedCluster, primaryIp DevicePrimaryIp, configContext map[string]interface{}, created string, lastUpdated time.Time, display string) *VirtualMachineWithConfigContext {
	this := VirtualMachineWithConfigContext{}
	this.Id = id
	this.Url = url
	this.Name = name
	this.Status = status
	this.Site = site
	this.Cluster = cluster
	this.PrimaryIp = primaryIp
	this.ConfigContext = configContext
	this.Created = created
	this.LastUpdated = lastUpdated
	this.Display = display
	return &this
}

// NewVirtualMachineWithConfigContextWithDefaults instantiates a new VirtualMachineWithConfigContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualMachineWithConfigContextWithDefaults() *VirtualMachineWithConfigContext {
	this := VirtualMachineWithConfigContext{}
	return &this
}

// GetId returns the Id field value
func (o *VirtualMachineWithConfigContext) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VirtualMachineWithConfigContext) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *VirtualMachineWithConfigContext) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *VirtualMachineWithConfigContext) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value
func (o *VirtualMachineWithConfigContext) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VirtualMachineWithConfigContext) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *VirtualMachineWithConfigContext) GetStatus() VirtualMachineWithConfigContextStatus {
	if o == nil {
		var ret VirtualMachineWithConfigContextStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetStatusOk() (*VirtualMachineWithConfigContextStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VirtualMachineWithConfigContext) SetStatus(v VirtualMachineWithConfigContextStatus) {
	o.Status = v
}

// GetSite returns the Site field value
func (o *VirtualMachineWithConfigContext) GetSite() PatchedWritableVirtualMachineWithConfigContextSite {
	if o == nil {
		var ret PatchedWritableVirtualMachineWithConfigContextSite
		return ret
	}

	return o.Site
}

// GetSiteOk returns a tuple with the Site field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetSiteOk() (*PatchedWritableVirtualMachineWithConfigContextSite, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Site, true
}

// SetSite sets field value
func (o *VirtualMachineWithConfigContext) SetSite(v PatchedWritableVirtualMachineWithConfigContextSite) {
	o.Site = v
}

// GetCluster returns the Cluster field value
func (o *VirtualMachineWithConfigContext) GetCluster() NestedCluster {
	if o == nil {
		var ret NestedCluster
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetClusterOk() (*NestedCluster, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *VirtualMachineWithConfigContext) SetCluster(v NestedCluster) {
	o.Cluster = v
}

// GetRole returns the Role field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VirtualMachineWithConfigContext) GetRole() VirtualMachineWithConfigContextRole {
	if o == nil || o.Role.Get() == nil {
		var ret VirtualMachineWithConfigContextRole
		return ret
	}
	return *o.Role.Get()
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualMachineWithConfigContext) GetRoleOk() (*VirtualMachineWithConfigContextRole, bool) {
	if o == nil {
		return nil, false
	}
	return o.Role.Get(), o.Role.IsSet()
}

// HasRole returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasRole() bool {
	if o != nil && o.Role.IsSet() {
		return true
	}

	return false
}

// SetRole gets a reference to the given NullableVirtualMachineWithConfigContextRole and assigns it to the Role field.
func (o *VirtualMachineWithConfigContext) SetRole(v VirtualMachineWithConfigContextRole) {
	o.Role.Set(&v)
}
// SetRoleNil sets the value for Role to be an explicit nil
func (o *VirtualMachineWithConfigContext) SetRoleNil() {
	o.Role.Set(nil)
}

// UnsetRole ensures that no value is present for Role, not even an explicit nil
func (o *VirtualMachineWithConfigContext) UnsetRole() {
	o.Role.Unset()
}

// GetTenant returns the Tenant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VirtualMachineWithConfigContext) GetTenant() AggregateTenant {
	if o == nil || o.Tenant.Get() == nil {
		var ret AggregateTenant
		return ret
	}
	return *o.Tenant.Get()
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualMachineWithConfigContext) GetTenantOk() (*AggregateTenant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tenant.Get(), o.Tenant.IsSet()
}

// HasTenant returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasTenant() bool {
	if o != nil && o.Tenant.IsSet() {
		return true
	}

	return false
}

// SetTenant gets a reference to the given NullableAggregateTenant and assigns it to the Tenant field.
func (o *VirtualMachineWithConfigContext) SetTenant(v AggregateTenant) {
	o.Tenant.Set(&v)
}
// SetTenantNil sets the value for Tenant to be an explicit nil
func (o *VirtualMachineWithConfigContext) SetTenantNil() {
	o.Tenant.Set(nil)
}

// UnsetTenant ensures that no value is present for Tenant, not even an explicit nil
func (o *VirtualMachineWithConfigContext) UnsetTenant() {
	o.Tenant.Unset()
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VirtualMachineWithConfigContext) GetPlatform() DevicePlatform {
	if o == nil || o.Platform.Get() == nil {
		var ret DevicePlatform
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualMachineWithConfigContext) GetPlatformOk() (*DevicePlatform, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableDevicePlatform and assigns it to the Platform field.
func (o *VirtualMachineWithConfigContext) SetPlatform(v DevicePlatform) {
	o.Platform.Set(&v)
}
// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *VirtualMachineWithConfigContext) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *VirtualMachineWithConfigContext) UnsetPlatform() {
	o.Platform.Unset()
}

// GetPrimaryIp returns the PrimaryIp field value
func (o *VirtualMachineWithConfigContext) GetPrimaryIp() DevicePrimaryIp {
	if o == nil {
		var ret DevicePrimaryIp
		return ret
	}

	return o.PrimaryIp
}

// GetPrimaryIpOk returns a tuple with the PrimaryIp field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetPrimaryIpOk() (*DevicePrimaryIp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrimaryIp, true
}

// SetPrimaryIp sets field value
func (o *VirtualMachineWithConfigContext) SetPrimaryIp(v DevicePrimaryIp) {
	o.PrimaryIp = v
}

// GetPrimaryIp4 returns the PrimaryIp4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VirtualMachineWithConfigContext) GetPrimaryIp4() DevicePrimaryIp4 {
	if o == nil || o.PrimaryIp4.Get() == nil {
		var ret DevicePrimaryIp4
		return ret
	}
	return *o.PrimaryIp4.Get()
}

// GetPrimaryIp4Ok returns a tuple with the PrimaryIp4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualMachineWithConfigContext) GetPrimaryIp4Ok() (*DevicePrimaryIp4, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryIp4.Get(), o.PrimaryIp4.IsSet()
}

// HasPrimaryIp4 returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasPrimaryIp4() bool {
	if o != nil && o.PrimaryIp4.IsSet() {
		return true
	}

	return false
}

// SetPrimaryIp4 gets a reference to the given NullableDevicePrimaryIp4 and assigns it to the PrimaryIp4 field.
func (o *VirtualMachineWithConfigContext) SetPrimaryIp4(v DevicePrimaryIp4) {
	o.PrimaryIp4.Set(&v)
}
// SetPrimaryIp4Nil sets the value for PrimaryIp4 to be an explicit nil
func (o *VirtualMachineWithConfigContext) SetPrimaryIp4Nil() {
	o.PrimaryIp4.Set(nil)
}

// UnsetPrimaryIp4 ensures that no value is present for PrimaryIp4, not even an explicit nil
func (o *VirtualMachineWithConfigContext) UnsetPrimaryIp4() {
	o.PrimaryIp4.Unset()
}

// GetPrimaryIp6 returns the PrimaryIp6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VirtualMachineWithConfigContext) GetPrimaryIp6() DevicePrimaryIp4 {
	if o == nil || o.PrimaryIp6.Get() == nil {
		var ret DevicePrimaryIp4
		return ret
	}
	return *o.PrimaryIp6.Get()
}

// GetPrimaryIp6Ok returns a tuple with the PrimaryIp6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualMachineWithConfigContext) GetPrimaryIp6Ok() (*DevicePrimaryIp4, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryIp6.Get(), o.PrimaryIp6.IsSet()
}

// HasPrimaryIp6 returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasPrimaryIp6() bool {
	if o != nil && o.PrimaryIp6.IsSet() {
		return true
	}

	return false
}

// SetPrimaryIp6 gets a reference to the given NullableDevicePrimaryIp4 and assigns it to the PrimaryIp6 field.
func (o *VirtualMachineWithConfigContext) SetPrimaryIp6(v DevicePrimaryIp4) {
	o.PrimaryIp6.Set(&v)
}
// SetPrimaryIp6Nil sets the value for PrimaryIp6 to be an explicit nil
func (o *VirtualMachineWithConfigContext) SetPrimaryIp6Nil() {
	o.PrimaryIp6.Set(nil)
}

// UnsetPrimaryIp6 ensures that no value is present for PrimaryIp6, not even an explicit nil
func (o *VirtualMachineWithConfigContext) UnsetPrimaryIp6() {
	o.PrimaryIp6.Unset()
}

// GetVcpus returns the Vcpus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VirtualMachineWithConfigContext) GetVcpus() int32 {
	if o == nil || o.Vcpus.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Vcpus.Get()
}

// GetVcpusOk returns a tuple with the Vcpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualMachineWithConfigContext) GetVcpusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vcpus.Get(), o.Vcpus.IsSet()
}

// HasVcpus returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasVcpus() bool {
	if o != nil && o.Vcpus.IsSet() {
		return true
	}

	return false
}

// SetVcpus gets a reference to the given NullableInt32 and assigns it to the Vcpus field.
func (o *VirtualMachineWithConfigContext) SetVcpus(v int32) {
	o.Vcpus.Set(&v)
}
// SetVcpusNil sets the value for Vcpus to be an explicit nil
func (o *VirtualMachineWithConfigContext) SetVcpusNil() {
	o.Vcpus.Set(nil)
}

// UnsetVcpus ensures that no value is present for Vcpus, not even an explicit nil
func (o *VirtualMachineWithConfigContext) UnsetVcpus() {
	o.Vcpus.Unset()
}

// GetMemory returns the Memory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VirtualMachineWithConfigContext) GetMemory() int32 {
	if o == nil || o.Memory.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Memory.Get()
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualMachineWithConfigContext) GetMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Memory.Get(), o.Memory.IsSet()
}

// HasMemory returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasMemory() bool {
	if o != nil && o.Memory.IsSet() {
		return true
	}

	return false
}

// SetMemory gets a reference to the given NullableInt32 and assigns it to the Memory field.
func (o *VirtualMachineWithConfigContext) SetMemory(v int32) {
	o.Memory.Set(&v)
}
// SetMemoryNil sets the value for Memory to be an explicit nil
func (o *VirtualMachineWithConfigContext) SetMemoryNil() {
	o.Memory.Set(nil)
}

// UnsetMemory ensures that no value is present for Memory, not even an explicit nil
func (o *VirtualMachineWithConfigContext) UnsetMemory() {
	o.Memory.Unset()
}

// GetDisk returns the Disk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VirtualMachineWithConfigContext) GetDisk() int32 {
	if o == nil || o.Disk.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Disk.Get()
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualMachineWithConfigContext) GetDiskOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Disk.Get(), o.Disk.IsSet()
}

// HasDisk returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasDisk() bool {
	if o != nil && o.Disk.IsSet() {
		return true
	}

	return false
}

// SetDisk gets a reference to the given NullableInt32 and assigns it to the Disk field.
func (o *VirtualMachineWithConfigContext) SetDisk(v int32) {
	o.Disk.Set(&v)
}
// SetDiskNil sets the value for Disk to be an explicit nil
func (o *VirtualMachineWithConfigContext) SetDiskNil() {
	o.Disk.Set(nil)
}

// UnsetDisk ensures that no value is present for Disk, not even an explicit nil
func (o *VirtualMachineWithConfigContext) UnsetDisk() {
	o.Disk.Unset()
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *VirtualMachineWithConfigContext) GetComments() string {
	if o == nil || o.Comments == nil {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetCommentsOk() (*string, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *VirtualMachineWithConfigContext) SetComments(v string) {
	o.Comments = &v
}

// GetLocalContextData returns the LocalContextData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VirtualMachineWithConfigContext) GetLocalContextData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.LocalContextData
}

// GetLocalContextDataOk returns a tuple with the LocalContextData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualMachineWithConfigContext) GetLocalContextDataOk() (map[string]interface{}, bool) {
	if o == nil || o.LocalContextData == nil {
		return nil, false
	}
	return o.LocalContextData, true
}

// HasLocalContextData returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasLocalContextData() bool {
	if o != nil && o.LocalContextData != nil {
		return true
	}

	return false
}

// SetLocalContextData gets a reference to the given map[string]interface{} and assigns it to the LocalContextData field.
func (o *VirtualMachineWithConfigContext) SetLocalContextData(v map[string]interface{}) {
	o.LocalContextData = v
}

// GetLocalContextSchema returns the LocalContextSchema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VirtualMachineWithConfigContext) GetLocalContextSchema() ConfigContextSchema {
	if o == nil || o.LocalContextSchema.Get() == nil {
		var ret ConfigContextSchema
		return ret
	}
	return *o.LocalContextSchema.Get()
}

// GetLocalContextSchemaOk returns a tuple with the LocalContextSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VirtualMachineWithConfigContext) GetLocalContextSchemaOk() (*ConfigContextSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalContextSchema.Get(), o.LocalContextSchema.IsSet()
}

// HasLocalContextSchema returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasLocalContextSchema() bool {
	if o != nil && o.LocalContextSchema.IsSet() {
		return true
	}

	return false
}

// SetLocalContextSchema gets a reference to the given NullableConfigContextSchema and assigns it to the LocalContextSchema field.
func (o *VirtualMachineWithConfigContext) SetLocalContextSchema(v ConfigContextSchema) {
	o.LocalContextSchema.Set(&v)
}
// SetLocalContextSchemaNil sets the value for LocalContextSchema to be an explicit nil
func (o *VirtualMachineWithConfigContext) SetLocalContextSchemaNil() {
	o.LocalContextSchema.Set(nil)
}

// UnsetLocalContextSchema ensures that no value is present for LocalContextSchema, not even an explicit nil
func (o *VirtualMachineWithConfigContext) UnsetLocalContextSchema() {
	o.LocalContextSchema.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VirtualMachineWithConfigContext) GetTags() []TagSerializerField {
	if o == nil || o.Tags == nil {
		var ret []TagSerializerField
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetTagsOk() ([]TagSerializerField, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagSerializerField and assigns it to the Tags field.
func (o *VirtualMachineWithConfigContext) SetTags(v []TagSerializerField) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *VirtualMachineWithConfigContext) GetCustomFields() map[string]interface{} {
	if o == nil || o.CustomFields == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomFields == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *VirtualMachineWithConfigContext) HasCustomFields() bool {
	if o != nil && o.CustomFields != nil {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *VirtualMachineWithConfigContext) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetConfigContext returns the ConfigContext field value
func (o *VirtualMachineWithConfigContext) GetConfigContext() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ConfigContext
}

// GetConfigContextOk returns a tuple with the ConfigContext field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetConfigContextOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigContext, true
}

// SetConfigContext sets field value
func (o *VirtualMachineWithConfigContext) SetConfigContext(v map[string]interface{}) {
	o.ConfigContext = v
}

// GetCreated returns the Created field value
func (o *VirtualMachineWithConfigContext) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *VirtualMachineWithConfigContext) SetCreated(v string) {
	o.Created = v
}

// GetLastUpdated returns the LastUpdated field value
func (o *VirtualMachineWithConfigContext) GetLastUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *VirtualMachineWithConfigContext) SetLastUpdated(v time.Time) {
	o.LastUpdated = v
}

// GetDisplay returns the Display field value
func (o *VirtualMachineWithConfigContext) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineWithConfigContext) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *VirtualMachineWithConfigContext) SetDisplay(v string) {
	o.Display = v
}

func (o VirtualMachineWithConfigContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["site"] = o.Site
	}
	if true {
		toSerialize["cluster"] = o.Cluster
	}
	if o.Role.IsSet() {
		toSerialize["role"] = o.Role.Get()
	}
	if o.Tenant.IsSet() {
		toSerialize["tenant"] = o.Tenant.Get()
	}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if true {
		toSerialize["primary_ip"] = o.PrimaryIp
	}
	if o.PrimaryIp4.IsSet() {
		toSerialize["primary_ip4"] = o.PrimaryIp4.Get()
	}
	if o.PrimaryIp6.IsSet() {
		toSerialize["primary_ip6"] = o.PrimaryIp6.Get()
	}
	if o.Vcpus.IsSet() {
		toSerialize["vcpus"] = o.Vcpus.Get()
	}
	if o.Memory.IsSet() {
		toSerialize["memory"] = o.Memory.Get()
	}
	if o.Disk.IsSet() {
		toSerialize["disk"] = o.Disk.Get()
	}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.LocalContextData != nil {
		toSerialize["local_context_data"] = o.LocalContextData
	}
	if o.LocalContextSchema.IsSet() {
		toSerialize["local_context_schema"] = o.LocalContextSchema.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if true {
		toSerialize["config_context"] = o.ConfigContext
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["last_updated"] = o.LastUpdated
	}
	if true {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualMachineWithConfigContext struct {
	value *VirtualMachineWithConfigContext
	isSet bool
}

func (v NullableVirtualMachineWithConfigContext) Get() *VirtualMachineWithConfigContext {
	return v.value
}

func (v *NullableVirtualMachineWithConfigContext) Set(val *VirtualMachineWithConfigContext) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualMachineWithConfigContext) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualMachineWithConfigContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualMachineWithConfigContext(val *VirtualMachineWithConfigContext) *NullableVirtualMachineWithConfigContext {
	return &NullableVirtualMachineWithConfigContext{value: val, isSet: true}
}

func (v NullableVirtualMachineWithConfigContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualMachineWithConfigContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


