/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NestedCircuit Returns a nested representation of an object on read, but accepts either the nested representation or the primary key value on write operations.
type NestedCircuit struct {
	Id string `json:"id"`
	Url string `json:"url"`
	Cid string `json:"cid"`
	// Human friendly display value
	Display string `json:"display"`
}

// NewNestedCircuit instantiates a new NestedCircuit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNestedCircuit(id string, url string, cid string, display string) *NestedCircuit {
	this := NestedCircuit{}
	this.Id = id
	this.Url = url
	this.Cid = cid
	this.Display = display
	return &this
}

// NewNestedCircuitWithDefaults instantiates a new NestedCircuit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNestedCircuitWithDefaults() *NestedCircuit {
	this := NestedCircuit{}
	return &this
}

// GetId returns the Id field value
func (o *NestedCircuit) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NestedCircuit) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NestedCircuit) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *NestedCircuit) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *NestedCircuit) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *NestedCircuit) SetUrl(v string) {
	o.Url = v
}

// GetCid returns the Cid field value
func (o *NestedCircuit) GetCid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cid
}

// GetCidOk returns a tuple with the Cid field value
// and a boolean to check if the value has been set.
func (o *NestedCircuit) GetCidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cid, true
}

// SetCid sets field value
func (o *NestedCircuit) SetCid(v string) {
	o.Cid = v
}

// GetDisplay returns the Display field value
func (o *NestedCircuit) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *NestedCircuit) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *NestedCircuit) SetDisplay(v string) {
	o.Display = v
}

func (o NestedCircuit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["cid"] = o.Cid
	}
	if true {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullableNestedCircuit struct {
	value *NestedCircuit
	isSet bool
}

func (v NullableNestedCircuit) Get() *NestedCircuit {
	return v.value
}

func (v *NullableNestedCircuit) Set(val *NestedCircuit) {
	v.value = val
	v.isSet = true
}

func (v NullableNestedCircuit) IsSet() bool {
	return v.isSet
}

func (v *NullableNestedCircuit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNestedCircuit(val *NestedCircuit) *NullableNestedCircuit {
	return &NullableNestedCircuit{value: val, isSet: true}
}

func (v NullableNestedCircuit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNestedCircuit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


