/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PatchedJobResult struct for PatchedJobResult
type PatchedJobResult struct {
	Id *string `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	Completed NullableTime `json:"completed,omitempty"`
	Name *string `json:"name,omitempty"`
	JobModel *JobResultJobModel `json:"job_model,omitempty"`
	ObjType *string `json:"obj_type,omitempty"`
	Status NullableJobResultStatusEnum `json:"status,omitempty"`
	User *JobResultUser `json:"user,omitempty"`
	Data map[string]interface{} `json:"data,omitempty"`
	JobId *string `json:"job_id,omitempty"`
	Schedule *JobResultSchedule `json:"schedule,omitempty"`
}

// NewPatchedJobResult instantiates a new PatchedJobResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedJobResult() *PatchedJobResult {
	this := PatchedJobResult{}
	return &this
}

// NewPatchedJobResultWithDefaults instantiates a new PatchedJobResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedJobResultWithDefaults() *PatchedJobResult {
	this := PatchedJobResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PatchedJobResult) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobResult) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PatchedJobResult) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PatchedJobResult) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PatchedJobResult) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobResult) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PatchedJobResult) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PatchedJobResult) SetUrl(v string) {
	o.Url = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PatchedJobResult) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobResult) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PatchedJobResult) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *PatchedJobResult) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedJobResult) GetCompleted() time.Time {
	if o == nil || o.Completed.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Completed.Get()
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedJobResult) GetCompletedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Completed.Get(), o.Completed.IsSet()
}

// HasCompleted returns a boolean if a field has been set.
func (o *PatchedJobResult) HasCompleted() bool {
	if o != nil && o.Completed.IsSet() {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given NullableTime and assigns it to the Completed field.
func (o *PatchedJobResult) SetCompleted(v time.Time) {
	o.Completed.Set(&v)
}
// SetCompletedNil sets the value for Completed to be an explicit nil
func (o *PatchedJobResult) SetCompletedNil() {
	o.Completed.Set(nil)
}

// UnsetCompleted ensures that no value is present for Completed, not even an explicit nil
func (o *PatchedJobResult) UnsetCompleted() {
	o.Completed.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedJobResult) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobResult) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedJobResult) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedJobResult) SetName(v string) {
	o.Name = &v
}

// GetJobModel returns the JobModel field value if set, zero value otherwise.
func (o *PatchedJobResult) GetJobModel() JobResultJobModel {
	if o == nil || o.JobModel == nil {
		var ret JobResultJobModel
		return ret
	}
	return *o.JobModel
}

// GetJobModelOk returns a tuple with the JobModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobResult) GetJobModelOk() (*JobResultJobModel, bool) {
	if o == nil || o.JobModel == nil {
		return nil, false
	}
	return o.JobModel, true
}

// HasJobModel returns a boolean if a field has been set.
func (o *PatchedJobResult) HasJobModel() bool {
	if o != nil && o.JobModel != nil {
		return true
	}

	return false
}

// SetJobModel gets a reference to the given JobResultJobModel and assigns it to the JobModel field.
func (o *PatchedJobResult) SetJobModel(v JobResultJobModel) {
	o.JobModel = &v
}

// GetObjType returns the ObjType field value if set, zero value otherwise.
func (o *PatchedJobResult) GetObjType() string {
	if o == nil || o.ObjType == nil {
		var ret string
		return ret
	}
	return *o.ObjType
}

// GetObjTypeOk returns a tuple with the ObjType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobResult) GetObjTypeOk() (*string, bool) {
	if o == nil || o.ObjType == nil {
		return nil, false
	}
	return o.ObjType, true
}

// HasObjType returns a boolean if a field has been set.
func (o *PatchedJobResult) HasObjType() bool {
	if o != nil && o.ObjType != nil {
		return true
	}

	return false
}

// SetObjType gets a reference to the given string and assigns it to the ObjType field.
func (o *PatchedJobResult) SetObjType(v string) {
	o.ObjType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedJobResult) GetStatus() JobResultStatusEnum {
	if o == nil || o.Status.Get() == nil {
		var ret JobResultStatusEnum
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedJobResult) GetStatusOk() (*JobResultStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedJobResult) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableJobResultStatusEnum and assigns it to the Status field.
func (o *PatchedJobResult) SetStatus(v JobResultStatusEnum) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *PatchedJobResult) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *PatchedJobResult) UnsetStatus() {
	o.Status.Unset()
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *PatchedJobResult) GetUser() JobResultUser {
	if o == nil || o.User == nil {
		var ret JobResultUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobResult) GetUserOk() (*JobResultUser, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *PatchedJobResult) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given JobResultUser and assigns it to the User field.
func (o *PatchedJobResult) SetUser(v JobResultUser) {
	o.User = &v
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedJobResult) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedJobResult) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PatchedJobResult) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *PatchedJobResult) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *PatchedJobResult) GetJobId() string {
	if o == nil || o.JobId == nil {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobResult) GetJobIdOk() (*string, bool) {
	if o == nil || o.JobId == nil {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *PatchedJobResult) HasJobId() bool {
	if o != nil && o.JobId != nil {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *PatchedJobResult) SetJobId(v string) {
	o.JobId = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *PatchedJobResult) GetSchedule() JobResultSchedule {
	if o == nil || o.Schedule == nil {
		var ret JobResultSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedJobResult) GetScheduleOk() (*JobResultSchedule, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *PatchedJobResult) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given JobResultSchedule and assigns it to the Schedule field.
func (o *PatchedJobResult) SetSchedule(v JobResultSchedule) {
	o.Schedule = &v
}

func (o PatchedJobResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Completed.IsSet() {
		toSerialize["completed"] = o.Completed.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.JobModel != nil {
		toSerialize["job_model"] = o.JobModel
	}
	if o.ObjType != nil {
		toSerialize["obj_type"] = o.ObjType
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.JobId != nil {
		toSerialize["job_id"] = o.JobId
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedJobResult struct {
	value *PatchedJobResult
	isSet bool
}

func (v NullablePatchedJobResult) Get() *PatchedJobResult {
	return v.value
}

func (v *NullablePatchedJobResult) Set(val *PatchedJobResult) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedJobResult) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedJobResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedJobResult(val *PatchedJobResult) *NullablePatchedJobResult {
	return &NullablePatchedJobResult{value: val, isSet: true}
}

func (v NullablePatchedJobResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedJobResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


