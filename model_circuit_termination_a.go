/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CircuitTerminationA struct for CircuitTerminationA
type CircuitTerminationA struct {
	Id string `json:"id"`
	Url string `json:"url"`
	Site NestedSite `json:"site"`
	ProviderNetwork NestedProviderNetwork `json:"provider_network"`
	ConnectedEndpoint NestedInterface `json:"connected_endpoint"`
	PortSpeed NullableInt32 `json:"port_speed,omitempty"`
	// Upstream speed, if different from port speed
	UpstreamSpeed NullableInt32 `json:"upstream_speed,omitempty"`
	XconnectId *string `json:"xconnect_id,omitempty"`
	// Human friendly display value
	Display string `json:"display"`
}

// NewCircuitTerminationA instantiates a new CircuitTerminationA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCircuitTerminationA(id string, url string, site NestedSite, providerNetwork NestedProviderNetwork, connectedEndpoint NestedInterface, display string) *CircuitTerminationA {
	this := CircuitTerminationA{}
	this.Id = id
	this.Url = url
	this.Site = site
	this.ProviderNetwork = providerNetwork
	this.ConnectedEndpoint = connectedEndpoint
	this.Display = display
	return &this
}

// NewCircuitTerminationAWithDefaults instantiates a new CircuitTerminationA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCircuitTerminationAWithDefaults() *CircuitTerminationA {
	this := CircuitTerminationA{}
	return &this
}

// GetId returns the Id field value
func (o *CircuitTerminationA) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CircuitTerminationA) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CircuitTerminationA) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *CircuitTerminationA) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CircuitTerminationA) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CircuitTerminationA) SetUrl(v string) {
	o.Url = v
}

// GetSite returns the Site field value
func (o *CircuitTerminationA) GetSite() NestedSite {
	if o == nil {
		var ret NestedSite
		return ret
	}

	return o.Site
}

// GetSiteOk returns a tuple with the Site field value
// and a boolean to check if the value has been set.
func (o *CircuitTerminationA) GetSiteOk() (*NestedSite, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Site, true
}

// SetSite sets field value
func (o *CircuitTerminationA) SetSite(v NestedSite) {
	o.Site = v
}

// GetProviderNetwork returns the ProviderNetwork field value
func (o *CircuitTerminationA) GetProviderNetwork() NestedProviderNetwork {
	if o == nil {
		var ret NestedProviderNetwork
		return ret
	}

	return o.ProviderNetwork
}

// GetProviderNetworkOk returns a tuple with the ProviderNetwork field value
// and a boolean to check if the value has been set.
func (o *CircuitTerminationA) GetProviderNetworkOk() (*NestedProviderNetwork, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderNetwork, true
}

// SetProviderNetwork sets field value
func (o *CircuitTerminationA) SetProviderNetwork(v NestedProviderNetwork) {
	o.ProviderNetwork = v
}

// GetConnectedEndpoint returns the ConnectedEndpoint field value
func (o *CircuitTerminationA) GetConnectedEndpoint() NestedInterface {
	if o == nil {
		var ret NestedInterface
		return ret
	}

	return o.ConnectedEndpoint
}

// GetConnectedEndpointOk returns a tuple with the ConnectedEndpoint field value
// and a boolean to check if the value has been set.
func (o *CircuitTerminationA) GetConnectedEndpointOk() (*NestedInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectedEndpoint, true
}

// SetConnectedEndpoint sets field value
func (o *CircuitTerminationA) SetConnectedEndpoint(v NestedInterface) {
	o.ConnectedEndpoint = v
}

// GetPortSpeed returns the PortSpeed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CircuitTerminationA) GetPortSpeed() int32 {
	if o == nil || o.PortSpeed.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PortSpeed.Get()
}

// GetPortSpeedOk returns a tuple with the PortSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CircuitTerminationA) GetPortSpeedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PortSpeed.Get(), o.PortSpeed.IsSet()
}

// HasPortSpeed returns a boolean if a field has been set.
func (o *CircuitTerminationA) HasPortSpeed() bool {
	if o != nil && o.PortSpeed.IsSet() {
		return true
	}

	return false
}

// SetPortSpeed gets a reference to the given NullableInt32 and assigns it to the PortSpeed field.
func (o *CircuitTerminationA) SetPortSpeed(v int32) {
	o.PortSpeed.Set(&v)
}
// SetPortSpeedNil sets the value for PortSpeed to be an explicit nil
func (o *CircuitTerminationA) SetPortSpeedNil() {
	o.PortSpeed.Set(nil)
}

// UnsetPortSpeed ensures that no value is present for PortSpeed, not even an explicit nil
func (o *CircuitTerminationA) UnsetPortSpeed() {
	o.PortSpeed.Unset()
}

// GetUpstreamSpeed returns the UpstreamSpeed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CircuitTerminationA) GetUpstreamSpeed() int32 {
	if o == nil || o.UpstreamSpeed.Get() == nil {
		var ret int32
		return ret
	}
	return *o.UpstreamSpeed.Get()
}

// GetUpstreamSpeedOk returns a tuple with the UpstreamSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CircuitTerminationA) GetUpstreamSpeedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpstreamSpeed.Get(), o.UpstreamSpeed.IsSet()
}

// HasUpstreamSpeed returns a boolean if a field has been set.
func (o *CircuitTerminationA) HasUpstreamSpeed() bool {
	if o != nil && o.UpstreamSpeed.IsSet() {
		return true
	}

	return false
}

// SetUpstreamSpeed gets a reference to the given NullableInt32 and assigns it to the UpstreamSpeed field.
func (o *CircuitTerminationA) SetUpstreamSpeed(v int32) {
	o.UpstreamSpeed.Set(&v)
}
// SetUpstreamSpeedNil sets the value for UpstreamSpeed to be an explicit nil
func (o *CircuitTerminationA) SetUpstreamSpeedNil() {
	o.UpstreamSpeed.Set(nil)
}

// UnsetUpstreamSpeed ensures that no value is present for UpstreamSpeed, not even an explicit nil
func (o *CircuitTerminationA) UnsetUpstreamSpeed() {
	o.UpstreamSpeed.Unset()
}

// GetXconnectId returns the XconnectId field value if set, zero value otherwise.
func (o *CircuitTerminationA) GetXconnectId() string {
	if o == nil || o.XconnectId == nil {
		var ret string
		return ret
	}
	return *o.XconnectId
}

// GetXconnectIdOk returns a tuple with the XconnectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CircuitTerminationA) GetXconnectIdOk() (*string, bool) {
	if o == nil || o.XconnectId == nil {
		return nil, false
	}
	return o.XconnectId, true
}

// HasXconnectId returns a boolean if a field has been set.
func (o *CircuitTerminationA) HasXconnectId() bool {
	if o != nil && o.XconnectId != nil {
		return true
	}

	return false
}

// SetXconnectId gets a reference to the given string and assigns it to the XconnectId field.
func (o *CircuitTerminationA) SetXconnectId(v string) {
	o.XconnectId = &v
}

// GetDisplay returns the Display field value
func (o *CircuitTerminationA) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *CircuitTerminationA) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *CircuitTerminationA) SetDisplay(v string) {
	o.Display = v
}

func (o CircuitTerminationA) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["site"] = o.Site
	}
	if true {
		toSerialize["provider_network"] = o.ProviderNetwork
	}
	if true {
		toSerialize["connected_endpoint"] = o.ConnectedEndpoint
	}
	if o.PortSpeed.IsSet() {
		toSerialize["port_speed"] = o.PortSpeed.Get()
	}
	if o.UpstreamSpeed.IsSet() {
		toSerialize["upstream_speed"] = o.UpstreamSpeed.Get()
	}
	if o.XconnectId != nil {
		toSerialize["xconnect_id"] = o.XconnectId
	}
	if true {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullableCircuitTerminationA struct {
	value *CircuitTerminationA
	isSet bool
}

func (v NullableCircuitTerminationA) Get() *CircuitTerminationA {
	return v.value
}

func (v *NullableCircuitTerminationA) Set(val *CircuitTerminationA) {
	v.value = val
	v.isSet = true
}

func (v NullableCircuitTerminationA) IsSet() bool {
	return v.isSet
}

func (v *NullableCircuitTerminationA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCircuitTerminationA(val *CircuitTerminationA) *NullableCircuitTerminationA {
	return &NullableCircuitTerminationA{value: val, isSet: true}
}

func (v NullableCircuitTerminationA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCircuitTerminationA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


