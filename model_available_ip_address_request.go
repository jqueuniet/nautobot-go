/*
API Documentation

Source of truth and network automation platform

API version: 1.3.10b1 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AvailableIPAddressRequest Mixin to add `status` choice field to model serializers.
type AvailableIPAddressRequest struct {
	Status IPAddressStatusChoices `json:"status"`
}

// NewAvailableIPAddressRequest instantiates a new AvailableIPAddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailableIPAddressRequest(status IPAddressStatusChoices) *AvailableIPAddressRequest {
	this := AvailableIPAddressRequest{}
	this.Status = status
	return &this
}

// NewAvailableIPAddressRequestWithDefaults instantiates a new AvailableIPAddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailableIPAddressRequestWithDefaults() *AvailableIPAddressRequest {
	this := AvailableIPAddressRequest{}
	return &this
}

// GetStatus returns the Status field value
func (o *AvailableIPAddressRequest) GetStatus() IPAddressStatusChoices {
	if o == nil {
		var ret IPAddressStatusChoices
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AvailableIPAddressRequest) GetStatusOk() (*IPAddressStatusChoices, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AvailableIPAddressRequest) SetStatus(v IPAddressStatusChoices) {
	o.Status = v
}

func (o AvailableIPAddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableAvailableIPAddressRequest struct {
	value *AvailableIPAddressRequest
	isSet bool
}

func (v NullableAvailableIPAddressRequest) Get() *AvailableIPAddressRequest {
	return v.value
}

func (v *NullableAvailableIPAddressRequest) Set(val *AvailableIPAddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailableIPAddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailableIPAddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailableIPAddressRequest(val *AvailableIPAddressRequest) *NullableAvailableIPAddressRequest {
	return &NullableAvailableIPAddressRequest{value: val, isSet: true}
}

func (v NullableAvailableIPAddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailableIPAddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


