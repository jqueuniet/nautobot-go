/*
API Documentation

Source of truth and network automation platform

API version: 1.3.10b1 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// NestedJobResult struct for NestedJobResult
type NestedJobResult struct {
	Id string `json:"id"`
	Url string `json:"url"`
	Name string `json:"name"`
	Created time.Time `json:"created"`
	Completed NullableTime `json:"completed,omitempty"`
	User JobResultUser `json:"user"`
	Status NestedJobResultStatus `json:"status"`
}

// NewNestedJobResult instantiates a new NestedJobResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNestedJobResult(id string, url string, name string, created time.Time, user JobResultUser, status NestedJobResultStatus) *NestedJobResult {
	this := NestedJobResult{}
	this.Id = id
	this.Url = url
	this.Name = name
	this.Created = created
	this.User = user
	this.Status = status
	return &this
}

// NewNestedJobResultWithDefaults instantiates a new NestedJobResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNestedJobResultWithDefaults() *NestedJobResult {
	this := NestedJobResult{}
	return &this
}

// GetId returns the Id field value
func (o *NestedJobResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NestedJobResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NestedJobResult) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *NestedJobResult) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *NestedJobResult) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *NestedJobResult) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value
func (o *NestedJobResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NestedJobResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NestedJobResult) SetName(v string) {
	o.Name = v
}

// GetCreated returns the Created field value
func (o *NestedJobResult) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *NestedJobResult) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *NestedJobResult) SetCreated(v time.Time) {
	o.Created = v
}

// GetCompleted returns the Completed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NestedJobResult) GetCompleted() time.Time {
	if o == nil || o.Completed.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Completed.Get()
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NestedJobResult) GetCompletedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Completed.Get(), o.Completed.IsSet()
}

// HasCompleted returns a boolean if a field has been set.
func (o *NestedJobResult) HasCompleted() bool {
	if o != nil && o.Completed.IsSet() {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given NullableTime and assigns it to the Completed field.
func (o *NestedJobResult) SetCompleted(v time.Time) {
	o.Completed.Set(&v)
}
// SetCompletedNil sets the value for Completed to be an explicit nil
func (o *NestedJobResult) SetCompletedNil() {
	o.Completed.Set(nil)
}

// UnsetCompleted ensures that no value is present for Completed, not even an explicit nil
func (o *NestedJobResult) UnsetCompleted() {
	o.Completed.Unset()
}

// GetUser returns the User field value
func (o *NestedJobResult) GetUser() JobResultUser {
	if o == nil {
		var ret JobResultUser
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *NestedJobResult) GetUserOk() (*JobResultUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *NestedJobResult) SetUser(v JobResultUser) {
	o.User = v
}

// GetStatus returns the Status field value
func (o *NestedJobResult) GetStatus() NestedJobResultStatus {
	if o == nil {
		var ret NestedJobResultStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *NestedJobResult) GetStatusOk() (*NestedJobResultStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *NestedJobResult) SetStatus(v NestedJobResultStatus) {
	o.Status = v
}

func (o NestedJobResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if o.Completed.IsSet() {
		toSerialize["completed"] = o.Completed.Get()
	}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableNestedJobResult struct {
	value *NestedJobResult
	isSet bool
}

func (v NullableNestedJobResult) Get() *NestedJobResult {
	return v.value
}

func (v *NullableNestedJobResult) Set(val *NestedJobResult) {
	v.value = val
	v.isSet = true
}

func (v NullableNestedJobResult) IsSet() bool {
	return v.isSet
}

func (v *NullableNestedJobResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNestedJobResult(val *NestedJobResult) *NullableNestedJobResult {
	return &NullableNestedJobResult{value: val, isSet: true}
}

func (v NullableNestedJobResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNestedJobResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


