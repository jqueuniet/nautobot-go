/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GraphqlCreate400Response struct for GraphqlCreate400Response
type GraphqlCreate400Response struct {
	Errors []map[string]interface{} `json:"errors,omitempty"`
}

// NewGraphqlCreate400Response instantiates a new GraphqlCreate400Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphqlCreate400Response() *GraphqlCreate400Response {
	this := GraphqlCreate400Response{}
	return &this
}

// NewGraphqlCreate400ResponseWithDefaults instantiates a new GraphqlCreate400Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphqlCreate400ResponseWithDefaults() *GraphqlCreate400Response {
	this := GraphqlCreate400Response{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *GraphqlCreate400Response) GetErrors() []map[string]interface{} {
	if o == nil || o.Errors == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphqlCreate400Response) GetErrorsOk() ([]map[string]interface{}, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *GraphqlCreate400Response) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []map[string]interface{} and assigns it to the Errors field.
func (o *GraphqlCreate400Response) SetErrors(v []map[string]interface{}) {
	o.Errors = v
}

func (o GraphqlCreate400Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableGraphqlCreate400Response struct {
	value *GraphqlCreate400Response
	isSet bool
}

func (v NullableGraphqlCreate400Response) Get() *GraphqlCreate400Response {
	return v.value
}

func (v *NullableGraphqlCreate400Response) Set(val *GraphqlCreate400Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphqlCreate400Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphqlCreate400Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphqlCreate400Response(val *GraphqlCreate400Response) *NullableGraphqlCreate400Response {
	return &NullableGraphqlCreate400Response{value: val, isSet: true}
}

func (v NullableGraphqlCreate400Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphqlCreate400Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


