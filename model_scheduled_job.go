/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ScheduledJob struct for ScheduledJob
type ScheduledJob struct {
	Id string `json:"id"`
	Url string `json:"url"`
	// Short Description For This Task
	Name string `json:"name"`
	User JobResultUser `json:"user"`
	JobModel JobResultJobModel `json:"job_model"`
	// The name of the Celery task that should be run. (Example: \"proj.tasks.import_contacts\")
	Task string `json:"task"`
	Interval IntervalEnum `json:"interval"`
	// Queue defined in CELERY_TASK_QUEUES. Leave None for default queuing.
	Queue NullableString `json:"queue,omitempty"`
	// Name of the fully qualified Nautobot Job class path
	JobClass string `json:"job_class"`
	// Datetime that the schedule last triggered the task to run. Reset to None if enabled is set to False.
	LastRunAt time.Time `json:"last_run_at"`
	// Running count of how many times the schedule has triggered the task
	TotalRunCount int32 `json:"total_run_count"`
	// Datetime that this scheduled job was last modified
	DateChanged time.Time `json:"date_changed"`
	// Detailed description about the details of this scheduled job
	Description *string `json:"description,omitempty"`
	ApprovedByUser JobResultUser `json:"approved_by_user"`
	ApprovalRequired *bool `json:"approval_required,omitempty"`
	// Datetime that the schedule was approved
	ApprovedAt time.Time `json:"approved_at"`
}

// NewScheduledJob instantiates a new ScheduledJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledJob(id string, url string, name string, user JobResultUser, jobModel JobResultJobModel, task string, interval IntervalEnum, jobClass string, lastRunAt time.Time, totalRunCount int32, dateChanged time.Time, approvedByUser JobResultUser, approvedAt time.Time) *ScheduledJob {
	this := ScheduledJob{}
	this.Id = id
	this.Url = url
	this.Name = name
	this.User = user
	this.JobModel = jobModel
	this.Task = task
	this.Interval = interval
	this.JobClass = jobClass
	this.LastRunAt = lastRunAt
	this.TotalRunCount = totalRunCount
	this.DateChanged = dateChanged
	this.ApprovedByUser = approvedByUser
	this.ApprovedAt = approvedAt
	return &this
}

// NewScheduledJobWithDefaults instantiates a new ScheduledJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledJobWithDefaults() *ScheduledJob {
	this := ScheduledJob{}
	return &this
}

// GetId returns the Id field value
func (o *ScheduledJob) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ScheduledJob) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *ScheduledJob) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ScheduledJob) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value
func (o *ScheduledJob) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ScheduledJob) SetName(v string) {
	o.Name = v
}

// GetUser returns the User field value
func (o *ScheduledJob) GetUser() JobResultUser {
	if o == nil {
		var ret JobResultUser
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetUserOk() (*JobResultUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *ScheduledJob) SetUser(v JobResultUser) {
	o.User = v
}

// GetJobModel returns the JobModel field value
func (o *ScheduledJob) GetJobModel() JobResultJobModel {
	if o == nil {
		var ret JobResultJobModel
		return ret
	}

	return o.JobModel
}

// GetJobModelOk returns a tuple with the JobModel field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetJobModelOk() (*JobResultJobModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobModel, true
}

// SetJobModel sets field value
func (o *ScheduledJob) SetJobModel(v JobResultJobModel) {
	o.JobModel = v
}

// GetTask returns the Task field value
func (o *ScheduledJob) GetTask() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Task
}

// GetTaskOk returns a tuple with the Task field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetTaskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Task, true
}

// SetTask sets field value
func (o *ScheduledJob) SetTask(v string) {
	o.Task = v
}

// GetInterval returns the Interval field value
func (o *ScheduledJob) GetInterval() IntervalEnum {
	if o == nil {
		var ret IntervalEnum
		return ret
	}

	return o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetIntervalOk() (*IntervalEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Interval, true
}

// SetInterval sets field value
func (o *ScheduledJob) SetInterval(v IntervalEnum) {
	o.Interval = v
}

// GetQueue returns the Queue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduledJob) GetQueue() string {
	if o == nil || o.Queue.Get() == nil {
		var ret string
		return ret
	}
	return *o.Queue.Get()
}

// GetQueueOk returns a tuple with the Queue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduledJob) GetQueueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Queue.Get(), o.Queue.IsSet()
}

// HasQueue returns a boolean if a field has been set.
func (o *ScheduledJob) HasQueue() bool {
	if o != nil && o.Queue.IsSet() {
		return true
	}

	return false
}

// SetQueue gets a reference to the given NullableString and assigns it to the Queue field.
func (o *ScheduledJob) SetQueue(v string) {
	o.Queue.Set(&v)
}
// SetQueueNil sets the value for Queue to be an explicit nil
func (o *ScheduledJob) SetQueueNil() {
	o.Queue.Set(nil)
}

// UnsetQueue ensures that no value is present for Queue, not even an explicit nil
func (o *ScheduledJob) UnsetQueue() {
	o.Queue.Unset()
}

// GetJobClass returns the JobClass field value
func (o *ScheduledJob) GetJobClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobClass
}

// GetJobClassOk returns a tuple with the JobClass field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetJobClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobClass, true
}

// SetJobClass sets field value
func (o *ScheduledJob) SetJobClass(v string) {
	o.JobClass = v
}

// GetLastRunAt returns the LastRunAt field value
func (o *ScheduledJob) GetLastRunAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastRunAt
}

// GetLastRunAtOk returns a tuple with the LastRunAt field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetLastRunAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastRunAt, true
}

// SetLastRunAt sets field value
func (o *ScheduledJob) SetLastRunAt(v time.Time) {
	o.LastRunAt = v
}

// GetTotalRunCount returns the TotalRunCount field value
func (o *ScheduledJob) GetTotalRunCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalRunCount
}

// GetTotalRunCountOk returns a tuple with the TotalRunCount field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetTotalRunCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalRunCount, true
}

// SetTotalRunCount sets field value
func (o *ScheduledJob) SetTotalRunCount(v int32) {
	o.TotalRunCount = v
}

// GetDateChanged returns the DateChanged field value
func (o *ScheduledJob) GetDateChanged() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateChanged
}

// GetDateChangedOk returns a tuple with the DateChanged field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetDateChangedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateChanged, true
}

// SetDateChanged sets field value
func (o *ScheduledJob) SetDateChanged(v time.Time) {
	o.DateChanged = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ScheduledJob) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ScheduledJob) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ScheduledJob) SetDescription(v string) {
	o.Description = &v
}

// GetApprovedByUser returns the ApprovedByUser field value
func (o *ScheduledJob) GetApprovedByUser() JobResultUser {
	if o == nil {
		var ret JobResultUser
		return ret
	}

	return o.ApprovedByUser
}

// GetApprovedByUserOk returns a tuple with the ApprovedByUser field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetApprovedByUserOk() (*JobResultUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApprovedByUser, true
}

// SetApprovedByUser sets field value
func (o *ScheduledJob) SetApprovedByUser(v JobResultUser) {
	o.ApprovedByUser = v
}

// GetApprovalRequired returns the ApprovalRequired field value if set, zero value otherwise.
func (o *ScheduledJob) GetApprovalRequired() bool {
	if o == nil || o.ApprovalRequired == nil {
		var ret bool
		return ret
	}
	return *o.ApprovalRequired
}

// GetApprovalRequiredOk returns a tuple with the ApprovalRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetApprovalRequiredOk() (*bool, bool) {
	if o == nil || o.ApprovalRequired == nil {
		return nil, false
	}
	return o.ApprovalRequired, true
}

// HasApprovalRequired returns a boolean if a field has been set.
func (o *ScheduledJob) HasApprovalRequired() bool {
	if o != nil && o.ApprovalRequired != nil {
		return true
	}

	return false
}

// SetApprovalRequired gets a reference to the given bool and assigns it to the ApprovalRequired field.
func (o *ScheduledJob) SetApprovalRequired(v bool) {
	o.ApprovalRequired = &v
}

// GetApprovedAt returns the ApprovedAt field value
func (o *ScheduledJob) GetApprovedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ApprovedAt
}

// GetApprovedAtOk returns a tuple with the ApprovedAt field value
// and a boolean to check if the value has been set.
func (o *ScheduledJob) GetApprovedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApprovedAt, true
}

// SetApprovedAt sets field value
func (o *ScheduledJob) SetApprovedAt(v time.Time) {
	o.ApprovedAt = v
}

func (o ScheduledJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["job_model"] = o.JobModel
	}
	if true {
		toSerialize["task"] = o.Task
	}
	if true {
		toSerialize["interval"] = o.Interval
	}
	if o.Queue.IsSet() {
		toSerialize["queue"] = o.Queue.Get()
	}
	if true {
		toSerialize["job_class"] = o.JobClass
	}
	if true {
		toSerialize["last_run_at"] = o.LastRunAt
	}
	if true {
		toSerialize["total_run_count"] = o.TotalRunCount
	}
	if true {
		toSerialize["date_changed"] = o.DateChanged
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["approved_by_user"] = o.ApprovedByUser
	}
	if o.ApprovalRequired != nil {
		toSerialize["approval_required"] = o.ApprovalRequired
	}
	if true {
		toSerialize["approved_at"] = o.ApprovedAt
	}
	return json.Marshal(toSerialize)
}

type NullableScheduledJob struct {
	value *ScheduledJob
	isSet bool
}

func (v NullableScheduledJob) Get() *ScheduledJob {
	return v.value
}

func (v *NullableScheduledJob) Set(val *ScheduledJob) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledJob) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledJob(val *ScheduledJob) *NullableScheduledJob {
	return &NullableScheduledJob{value: val, isSet: true}
}

func (v NullableScheduledJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


