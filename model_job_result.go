/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// JobResult struct for JobResult
type JobResult struct {
	Id string `json:"id"`
	Url string `json:"url"`
	Created time.Time `json:"created"`
	Completed NullableTime `json:"completed,omitempty"`
	Name string `json:"name"`
	JobModel JobResultJobModel `json:"job_model"`
	ObjType string `json:"obj_type"`
	Status JobResultStatus `json:"status"`
	User JobResultUser `json:"user"`
	Data map[string]interface{} `json:"data,omitempty"`
	JobId string `json:"job_id"`
	Schedule JobResultSchedule `json:"schedule"`
}

// NewJobResult instantiates a new JobResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobResult(id string, url string, created time.Time, name string, jobModel JobResultJobModel, objType string, status JobResultStatus, user JobResultUser, jobId string, schedule JobResultSchedule) *JobResult {
	this := JobResult{}
	this.Id = id
	this.Url = url
	this.Created = created
	this.Name = name
	this.JobModel = jobModel
	this.ObjType = objType
	this.Status = status
	this.User = user
	this.JobId = jobId
	this.Schedule = schedule
	return &this
}

// NewJobResultWithDefaults instantiates a new JobResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobResultWithDefaults() *JobResult {
	this := JobResult{}
	return &this
}

// GetId returns the Id field value
func (o *JobResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *JobResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *JobResult) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *JobResult) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *JobResult) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *JobResult) SetUrl(v string) {
	o.Url = v
}

// GetCreated returns the Created field value
func (o *JobResult) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *JobResult) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *JobResult) SetCreated(v time.Time) {
	o.Created = v
}

// GetCompleted returns the Completed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResult) GetCompleted() time.Time {
	if o == nil || o.Completed.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Completed.Get()
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResult) GetCompletedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Completed.Get(), o.Completed.IsSet()
}

// HasCompleted returns a boolean if a field has been set.
func (o *JobResult) HasCompleted() bool {
	if o != nil && o.Completed.IsSet() {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given NullableTime and assigns it to the Completed field.
func (o *JobResult) SetCompleted(v time.Time) {
	o.Completed.Set(&v)
}
// SetCompletedNil sets the value for Completed to be an explicit nil
func (o *JobResult) SetCompletedNil() {
	o.Completed.Set(nil)
}

// UnsetCompleted ensures that no value is present for Completed, not even an explicit nil
func (o *JobResult) UnsetCompleted() {
	o.Completed.Unset()
}

// GetName returns the Name field value
func (o *JobResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *JobResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *JobResult) SetName(v string) {
	o.Name = v
}

// GetJobModel returns the JobModel field value
func (o *JobResult) GetJobModel() JobResultJobModel {
	if o == nil {
		var ret JobResultJobModel
		return ret
	}

	return o.JobModel
}

// GetJobModelOk returns a tuple with the JobModel field value
// and a boolean to check if the value has been set.
func (o *JobResult) GetJobModelOk() (*JobResultJobModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobModel, true
}

// SetJobModel sets field value
func (o *JobResult) SetJobModel(v JobResultJobModel) {
	o.JobModel = v
}

// GetObjType returns the ObjType field value
func (o *JobResult) GetObjType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjType
}

// GetObjTypeOk returns a tuple with the ObjType field value
// and a boolean to check if the value has been set.
func (o *JobResult) GetObjTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjType, true
}

// SetObjType sets field value
func (o *JobResult) SetObjType(v string) {
	o.ObjType = v
}

// GetStatus returns the Status field value
func (o *JobResult) GetStatus() JobResultStatus {
	if o == nil {
		var ret JobResultStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *JobResult) GetStatusOk() (*JobResultStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *JobResult) SetStatus(v JobResultStatus) {
	o.Status = v
}

// GetUser returns the User field value
func (o *JobResult) GetUser() JobResultUser {
	if o == nil {
		var ret JobResultUser
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *JobResult) GetUserOk() (*JobResultUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *JobResult) SetUser(v JobResultUser) {
	o.User = v
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResult) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResult) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *JobResult) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *JobResult) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetJobId returns the JobId field value
func (o *JobResult) GetJobId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *JobResult) GetJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *JobResult) SetJobId(v string) {
	o.JobId = v
}

// GetSchedule returns the Schedule field value
func (o *JobResult) GetSchedule() JobResultSchedule {
	if o == nil {
		var ret JobResultSchedule
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *JobResult) GetScheduleOk() (*JobResultSchedule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *JobResult) SetSchedule(v JobResultSchedule) {
	o.Schedule = v
}

func (o JobResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if o.Completed.IsSet() {
		toSerialize["completed"] = o.Completed.Get()
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["job_model"] = o.JobModel
	}
	if true {
		toSerialize["obj_type"] = o.ObjType
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["user"] = o.User
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["job_id"] = o.JobId
	}
	if true {
		toSerialize["schedule"] = o.Schedule
	}
	return json.Marshal(toSerialize)
}

type NullableJobResult struct {
	value *JobResult
	isSet bool
}

func (v NullableJobResult) Get() *JobResult {
	return v.value
}

func (v *NullableJobResult) Set(val *JobResult) {
	v.value = val
	v.isSet = true
}

func (v NullableJobResult) IsSet() bool {
	return v.isSet
}

func (v *NullableJobResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobResult(val *JobResult) *NullableJobResult {
	return &NullableJobResult{value: val, isSet: true}
}

func (v NullableJobResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


