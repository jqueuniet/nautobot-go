/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PatchedWritableVirtualMachineWithConfigContext Mixin to add `status` choice field to model serializers.
type PatchedWritableVirtualMachineWithConfigContext struct {
	Id *string `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
	Name *string `json:"name,omitempty"`
	Status *WritableVirtualMachineWithConfigContextStatusEnum `json:"status,omitempty"`
	Site *PatchedWritableVirtualMachineWithConfigContextSite `json:"site,omitempty"`
	Cluster *string `json:"cluster,omitempty"`
	Role NullableString `json:"role,omitempty"`
	Tenant NullableString `json:"tenant,omitempty"`
	Platform NullableString `json:"platform,omitempty"`
	PrimaryIp *DevicePrimaryIp `json:"primary_ip,omitempty"`
	PrimaryIp4 NullableString `json:"primary_ip4,omitempty"`
	PrimaryIp6 NullableString `json:"primary_ip6,omitempty"`
	Vcpus NullableInt32 `json:"vcpus,omitempty"`
	Memory NullableInt32 `json:"memory,omitempty"`
	Disk NullableInt32 `json:"disk,omitempty"`
	Comments *string `json:"comments,omitempty"`
	LocalContextData map[string]interface{} `json:"local_context_data,omitempty"`
	// Optional schema to validate the structure of the data
	LocalContextSchema NullableString `json:"local_context_schema,omitempty"`
	Tags []TagSerializerField `json:"tags,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	ConfigContext map[string]interface{} `json:"config_context,omitempty"`
	Created *string `json:"created,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
	// Human friendly display value
	Display *string `json:"display,omitempty"`
}

// NewPatchedWritableVirtualMachineWithConfigContext instantiates a new PatchedWritableVirtualMachineWithConfigContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWritableVirtualMachineWithConfigContext() *PatchedWritableVirtualMachineWithConfigContext {
	this := PatchedWritableVirtualMachineWithConfigContext{}
	return &this
}

// NewPatchedWritableVirtualMachineWithConfigContextWithDefaults instantiates a new PatchedWritableVirtualMachineWithConfigContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWritableVirtualMachineWithConfigContextWithDefaults() *PatchedWritableVirtualMachineWithConfigContext {
	this := PatchedWritableVirtualMachineWithConfigContext{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetUrl(v string) {
	o.Url = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetStatus() WritableVirtualMachineWithConfigContextStatusEnum {
	if o == nil || o.Status == nil {
		var ret WritableVirtualMachineWithConfigContextStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetStatusOk() (*WritableVirtualMachineWithConfigContextStatusEnum, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WritableVirtualMachineWithConfigContextStatusEnum and assigns it to the Status field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetStatus(v WritableVirtualMachineWithConfigContextStatusEnum) {
	o.Status = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetSite() PatchedWritableVirtualMachineWithConfigContextSite {
	if o == nil || o.Site == nil {
		var ret PatchedWritableVirtualMachineWithConfigContextSite
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetSiteOk() (*PatchedWritableVirtualMachineWithConfigContextSite, bool) {
	if o == nil || o.Site == nil {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given PatchedWritableVirtualMachineWithConfigContextSite and assigns it to the Site field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetSite(v PatchedWritableVirtualMachineWithConfigContextSite) {
	o.Site = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetCluster() string {
	if o == nil || o.Cluster == nil {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetClusterOk() (*string, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetCluster(v string) {
	o.Cluster = &v
}

// GetRole returns the Role field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableVirtualMachineWithConfigContext) GetRole() string {
	if o == nil || o.Role.Get() == nil {
		var ret string
		return ret
	}
	return *o.Role.Get()
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableVirtualMachineWithConfigContext) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Role.Get(), o.Role.IsSet()
}

// HasRole returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasRole() bool {
	if o != nil && o.Role.IsSet() {
		return true
	}

	return false
}

// SetRole gets a reference to the given NullableString and assigns it to the Role field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetRole(v string) {
	o.Role.Set(&v)
}
// SetRoleNil sets the value for Role to be an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) SetRoleNil() {
	o.Role.Set(nil)
}

// UnsetRole ensures that no value is present for Role, not even an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) UnsetRole() {
	o.Role.Unset()
}

// GetTenant returns the Tenant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableVirtualMachineWithConfigContext) GetTenant() string {
	if o == nil || o.Tenant.Get() == nil {
		var ret string
		return ret
	}
	return *o.Tenant.Get()
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableVirtualMachineWithConfigContext) GetTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tenant.Get(), o.Tenant.IsSet()
}

// HasTenant returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasTenant() bool {
	if o != nil && o.Tenant.IsSet() {
		return true
	}

	return false
}

// SetTenant gets a reference to the given NullableString and assigns it to the Tenant field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetTenant(v string) {
	o.Tenant.Set(&v)
}
// SetTenantNil sets the value for Tenant to be an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) SetTenantNil() {
	o.Tenant.Set(nil)
}

// UnsetTenant ensures that no value is present for Tenant, not even an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) UnsetTenant() {
	o.Tenant.Unset()
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableVirtualMachineWithConfigContext) GetPlatform() string {
	if o == nil || o.Platform.Get() == nil {
		var ret string
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableVirtualMachineWithConfigContext) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableString and assigns it to the Platform field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetPlatform(v string) {
	o.Platform.Set(&v)
}
// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) UnsetPlatform() {
	o.Platform.Unset()
}

// GetPrimaryIp returns the PrimaryIp field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetPrimaryIp() DevicePrimaryIp {
	if o == nil || o.PrimaryIp == nil {
		var ret DevicePrimaryIp
		return ret
	}
	return *o.PrimaryIp
}

// GetPrimaryIpOk returns a tuple with the PrimaryIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetPrimaryIpOk() (*DevicePrimaryIp, bool) {
	if o == nil || o.PrimaryIp == nil {
		return nil, false
	}
	return o.PrimaryIp, true
}

// HasPrimaryIp returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasPrimaryIp() bool {
	if o != nil && o.PrimaryIp != nil {
		return true
	}

	return false
}

// SetPrimaryIp gets a reference to the given DevicePrimaryIp and assigns it to the PrimaryIp field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetPrimaryIp(v DevicePrimaryIp) {
	o.PrimaryIp = &v
}

// GetPrimaryIp4 returns the PrimaryIp4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableVirtualMachineWithConfigContext) GetPrimaryIp4() string {
	if o == nil || o.PrimaryIp4.Get() == nil {
		var ret string
		return ret
	}
	return *o.PrimaryIp4.Get()
}

// GetPrimaryIp4Ok returns a tuple with the PrimaryIp4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableVirtualMachineWithConfigContext) GetPrimaryIp4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryIp4.Get(), o.PrimaryIp4.IsSet()
}

// HasPrimaryIp4 returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasPrimaryIp4() bool {
	if o != nil && o.PrimaryIp4.IsSet() {
		return true
	}

	return false
}

// SetPrimaryIp4 gets a reference to the given NullableString and assigns it to the PrimaryIp4 field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetPrimaryIp4(v string) {
	o.PrimaryIp4.Set(&v)
}
// SetPrimaryIp4Nil sets the value for PrimaryIp4 to be an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) SetPrimaryIp4Nil() {
	o.PrimaryIp4.Set(nil)
}

// UnsetPrimaryIp4 ensures that no value is present for PrimaryIp4, not even an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) UnsetPrimaryIp4() {
	o.PrimaryIp4.Unset()
}

// GetPrimaryIp6 returns the PrimaryIp6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableVirtualMachineWithConfigContext) GetPrimaryIp6() string {
	if o == nil || o.PrimaryIp6.Get() == nil {
		var ret string
		return ret
	}
	return *o.PrimaryIp6.Get()
}

// GetPrimaryIp6Ok returns a tuple with the PrimaryIp6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableVirtualMachineWithConfigContext) GetPrimaryIp6Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryIp6.Get(), o.PrimaryIp6.IsSet()
}

// HasPrimaryIp6 returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasPrimaryIp6() bool {
	if o != nil && o.PrimaryIp6.IsSet() {
		return true
	}

	return false
}

// SetPrimaryIp6 gets a reference to the given NullableString and assigns it to the PrimaryIp6 field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetPrimaryIp6(v string) {
	o.PrimaryIp6.Set(&v)
}
// SetPrimaryIp6Nil sets the value for PrimaryIp6 to be an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) SetPrimaryIp6Nil() {
	o.PrimaryIp6.Set(nil)
}

// UnsetPrimaryIp6 ensures that no value is present for PrimaryIp6, not even an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) UnsetPrimaryIp6() {
	o.PrimaryIp6.Unset()
}

// GetVcpus returns the Vcpus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableVirtualMachineWithConfigContext) GetVcpus() int32 {
	if o == nil || o.Vcpus.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Vcpus.Get()
}

// GetVcpusOk returns a tuple with the Vcpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableVirtualMachineWithConfigContext) GetVcpusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vcpus.Get(), o.Vcpus.IsSet()
}

// HasVcpus returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasVcpus() bool {
	if o != nil && o.Vcpus.IsSet() {
		return true
	}

	return false
}

// SetVcpus gets a reference to the given NullableInt32 and assigns it to the Vcpus field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetVcpus(v int32) {
	o.Vcpus.Set(&v)
}
// SetVcpusNil sets the value for Vcpus to be an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) SetVcpusNil() {
	o.Vcpus.Set(nil)
}

// UnsetVcpus ensures that no value is present for Vcpus, not even an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) UnsetVcpus() {
	o.Vcpus.Unset()
}

// GetMemory returns the Memory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableVirtualMachineWithConfigContext) GetMemory() int32 {
	if o == nil || o.Memory.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Memory.Get()
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableVirtualMachineWithConfigContext) GetMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Memory.Get(), o.Memory.IsSet()
}

// HasMemory returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasMemory() bool {
	if o != nil && o.Memory.IsSet() {
		return true
	}

	return false
}

// SetMemory gets a reference to the given NullableInt32 and assigns it to the Memory field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetMemory(v int32) {
	o.Memory.Set(&v)
}
// SetMemoryNil sets the value for Memory to be an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) SetMemoryNil() {
	o.Memory.Set(nil)
}

// UnsetMemory ensures that no value is present for Memory, not even an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) UnsetMemory() {
	o.Memory.Unset()
}

// GetDisk returns the Disk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableVirtualMachineWithConfigContext) GetDisk() int32 {
	if o == nil || o.Disk.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Disk.Get()
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableVirtualMachineWithConfigContext) GetDiskOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Disk.Get(), o.Disk.IsSet()
}

// HasDisk returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasDisk() bool {
	if o != nil && o.Disk.IsSet() {
		return true
	}

	return false
}

// SetDisk gets a reference to the given NullableInt32 and assigns it to the Disk field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetDisk(v int32) {
	o.Disk.Set(&v)
}
// SetDiskNil sets the value for Disk to be an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) SetDiskNil() {
	o.Disk.Set(nil)
}

// UnsetDisk ensures that no value is present for Disk, not even an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) UnsetDisk() {
	o.Disk.Unset()
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetComments() string {
	if o == nil || o.Comments == nil {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetCommentsOk() (*string, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetComments(v string) {
	o.Comments = &v
}

// GetLocalContextData returns the LocalContextData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableVirtualMachineWithConfigContext) GetLocalContextData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.LocalContextData
}

// GetLocalContextDataOk returns a tuple with the LocalContextData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableVirtualMachineWithConfigContext) GetLocalContextDataOk() (map[string]interface{}, bool) {
	if o == nil || o.LocalContextData == nil {
		return nil, false
	}
	return o.LocalContextData, true
}

// HasLocalContextData returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasLocalContextData() bool {
	if o != nil && o.LocalContextData != nil {
		return true
	}

	return false
}

// SetLocalContextData gets a reference to the given map[string]interface{} and assigns it to the LocalContextData field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetLocalContextData(v map[string]interface{}) {
	o.LocalContextData = v
}

// GetLocalContextSchema returns the LocalContextSchema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritableVirtualMachineWithConfigContext) GetLocalContextSchema() string {
	if o == nil || o.LocalContextSchema.Get() == nil {
		var ret string
		return ret
	}
	return *o.LocalContextSchema.Get()
}

// GetLocalContextSchemaOk returns a tuple with the LocalContextSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritableVirtualMachineWithConfigContext) GetLocalContextSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalContextSchema.Get(), o.LocalContextSchema.IsSet()
}

// HasLocalContextSchema returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasLocalContextSchema() bool {
	if o != nil && o.LocalContextSchema.IsSet() {
		return true
	}

	return false
}

// SetLocalContextSchema gets a reference to the given NullableString and assigns it to the LocalContextSchema field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetLocalContextSchema(v string) {
	o.LocalContextSchema.Set(&v)
}
// SetLocalContextSchemaNil sets the value for LocalContextSchema to be an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) SetLocalContextSchemaNil() {
	o.LocalContextSchema.Set(nil)
}

// UnsetLocalContextSchema ensures that no value is present for LocalContextSchema, not even an explicit nil
func (o *PatchedWritableVirtualMachineWithConfigContext) UnsetLocalContextSchema() {
	o.LocalContextSchema.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetTags() []TagSerializerField {
	if o == nil || o.Tags == nil {
		var ret []TagSerializerField
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetTagsOk() ([]TagSerializerField, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagSerializerField and assigns it to the Tags field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetTags(v []TagSerializerField) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetCustomFields() map[string]interface{} {
	if o == nil || o.CustomFields == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomFields == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasCustomFields() bool {
	if o != nil && o.CustomFields != nil {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetConfigContext returns the ConfigContext field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetConfigContext() map[string]interface{} {
	if o == nil || o.ConfigContext == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ConfigContext
}

// GetConfigContextOk returns a tuple with the ConfigContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetConfigContextOk() (map[string]interface{}, bool) {
	if o == nil || o.ConfigContext == nil {
		return nil, false
	}
	return o.ConfigContext, true
}

// HasConfigContext returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasConfigContext() bool {
	if o != nil && o.ConfigContext != nil {
		return true
	}

	return false
}

// SetConfigContext gets a reference to the given map[string]interface{} and assigns it to the ConfigContext field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetConfigContext(v map[string]interface{}) {
	o.ConfigContext = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetCreated(v string) {
	o.Created = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetDisplay() string {
	if o == nil || o.Display == nil {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) GetDisplayOk() (*string, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *PatchedWritableVirtualMachineWithConfigContext) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *PatchedWritableVirtualMachineWithConfigContext) SetDisplay(v string) {
	o.Display = &v
}

func (o PatchedWritableVirtualMachineWithConfigContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.Role.IsSet() {
		toSerialize["role"] = o.Role.Get()
	}
	if o.Tenant.IsSet() {
		toSerialize["tenant"] = o.Tenant.Get()
	}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if o.PrimaryIp != nil {
		toSerialize["primary_ip"] = o.PrimaryIp
	}
	if o.PrimaryIp4.IsSet() {
		toSerialize["primary_ip4"] = o.PrimaryIp4.Get()
	}
	if o.PrimaryIp6.IsSet() {
		toSerialize["primary_ip6"] = o.PrimaryIp6.Get()
	}
	if o.Vcpus.IsSet() {
		toSerialize["vcpus"] = o.Vcpus.Get()
	}
	if o.Memory.IsSet() {
		toSerialize["memory"] = o.Memory.Get()
	}
	if o.Disk.IsSet() {
		toSerialize["disk"] = o.Disk.Get()
	}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.LocalContextData != nil {
		toSerialize["local_context_data"] = o.LocalContextData
	}
	if o.LocalContextSchema.IsSet() {
		toSerialize["local_context_schema"] = o.LocalContextSchema.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.ConfigContext != nil {
		toSerialize["config_context"] = o.ConfigContext
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.LastUpdated != nil {
		toSerialize["last_updated"] = o.LastUpdated
	}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedWritableVirtualMachineWithConfigContext struct {
	value *PatchedWritableVirtualMachineWithConfigContext
	isSet bool
}

func (v NullablePatchedWritableVirtualMachineWithConfigContext) Get() *PatchedWritableVirtualMachineWithConfigContext {
	return v.value
}

func (v *NullablePatchedWritableVirtualMachineWithConfigContext) Set(val *PatchedWritableVirtualMachineWithConfigContext) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableVirtualMachineWithConfigContext) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableVirtualMachineWithConfigContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableVirtualMachineWithConfigContext(val *PatchedWritableVirtualMachineWithConfigContext) *NullablePatchedWritableVirtualMachineWithConfigContext {
	return &NullablePatchedWritableVirtualMachineWithConfigContext{value: val, isSet: true}
}

func (v NullablePatchedWritableVirtualMachineWithConfigContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableVirtualMachineWithConfigContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


