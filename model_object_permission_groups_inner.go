/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ObjectPermissionGroupsInner struct for ObjectPermissionGroupsInner
type ObjectPermissionGroupsInner struct {
	Id int32 `json:"id"`
	Url string `json:"url"`
	Name string `json:"name"`
	// Human friendly display value
	Display string `json:"display"`
}

// NewObjectPermissionGroupsInner instantiates a new ObjectPermissionGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectPermissionGroupsInner(id int32, url string, name string, display string) *ObjectPermissionGroupsInner {
	this := ObjectPermissionGroupsInner{}
	this.Id = id
	this.Url = url
	this.Name = name
	this.Display = display
	return &this
}

// NewObjectPermissionGroupsInnerWithDefaults instantiates a new ObjectPermissionGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectPermissionGroupsInnerWithDefaults() *ObjectPermissionGroupsInner {
	this := ObjectPermissionGroupsInner{}
	return &this
}

// GetId returns the Id field value
func (o *ObjectPermissionGroupsInner) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ObjectPermissionGroupsInner) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ObjectPermissionGroupsInner) SetId(v int32) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *ObjectPermissionGroupsInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ObjectPermissionGroupsInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ObjectPermissionGroupsInner) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value
func (o *ObjectPermissionGroupsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ObjectPermissionGroupsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ObjectPermissionGroupsInner) SetName(v string) {
	o.Name = v
}

// GetDisplay returns the Display field value
func (o *ObjectPermissionGroupsInner) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *ObjectPermissionGroupsInner) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *ObjectPermissionGroupsInner) SetDisplay(v string) {
	o.Display = v
}

func (o ObjectPermissionGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullableObjectPermissionGroupsInner struct {
	value *ObjectPermissionGroupsInner
	isSet bool
}

func (v NullableObjectPermissionGroupsInner) Get() *ObjectPermissionGroupsInner {
	return v.value
}

func (v *NullableObjectPermissionGroupsInner) Set(val *ObjectPermissionGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectPermissionGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectPermissionGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectPermissionGroupsInner(val *ObjectPermissionGroupsInner) *NullableObjectPermissionGroupsInner {
	return &NullableObjectPermissionGroupsInner{value: val, isSet: true}
}

func (v NullableObjectPermissionGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectPermissionGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


