/*
API Documentation

Source of truth and network automation platform

API version: 1.3.10b1 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FrontPortRearPort NestedRearPortSerializer but with parent device omitted (since front and rear ports must belong to same device)
type FrontPortRearPort struct {
	Id string `json:"id"`
	Url string `json:"url"`
	Name string `json:"name"`
	// Physical label
	Label *string `json:"label,omitempty"`
	// Human friendly display value
	Display string `json:"display"`
}

// NewFrontPortRearPort instantiates a new FrontPortRearPort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrontPortRearPort(id string, url string, name string, display string) *FrontPortRearPort {
	this := FrontPortRearPort{}
	this.Id = id
	this.Url = url
	this.Name = name
	this.Display = display
	return &this
}

// NewFrontPortRearPortWithDefaults instantiates a new FrontPortRearPort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrontPortRearPortWithDefaults() *FrontPortRearPort {
	this := FrontPortRearPort{}
	return &this
}

// GetId returns the Id field value
func (o *FrontPortRearPort) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FrontPortRearPort) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FrontPortRearPort) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *FrontPortRearPort) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *FrontPortRearPort) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *FrontPortRearPort) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value
func (o *FrontPortRearPort) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FrontPortRearPort) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FrontPortRearPort) SetName(v string) {
	o.Name = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *FrontPortRearPort) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrontPortRearPort) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *FrontPortRearPort) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *FrontPortRearPort) SetLabel(v string) {
	o.Label = &v
}

// GetDisplay returns the Display field value
func (o *FrontPortRearPort) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *FrontPortRearPort) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *FrontPortRearPort) SetDisplay(v string) {
	o.Display = v
}

func (o FrontPortRearPort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if true {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullableFrontPortRearPort struct {
	value *FrontPortRearPort
	isSet bool
}

func (v NullableFrontPortRearPort) Get() *FrontPortRearPort {
	return v.value
}

func (v *NullableFrontPortRearPort) Set(val *FrontPortRearPort) {
	v.value = val
	v.isSet = true
}

func (v NullableFrontPortRearPort) IsSet() bool {
	return v.isSet
}

func (v *NullableFrontPortRearPort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrontPortRearPort(val *FrontPortRearPort) *NullableFrontPortRearPort {
	return &NullableFrontPortRearPort{value: val, isSet: true}
}

func (v NullableFrontPortRearPort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrontPortRearPort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


