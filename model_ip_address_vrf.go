/*
API Documentation

Source of truth and network automation platform

API version: 1.3.10b1 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IPAddressVrf struct for IPAddressVrf
type IPAddressVrf struct {
	Id string `json:"id"`
	Url string `json:"url"`
	Name string `json:"name"`
	// Unique route distinguisher (as defined in RFC 4364)
	Rd NullableString `json:"rd,omitempty"`
	// Human friendly display value
	Display string `json:"display"`
	PrefixCount int32 `json:"prefix_count"`
}

// NewIPAddressVrf instantiates a new IPAddressVrf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPAddressVrf(id string, url string, name string, display string, prefixCount int32) *IPAddressVrf {
	this := IPAddressVrf{}
	this.Id = id
	this.Url = url
	this.Name = name
	this.Display = display
	this.PrefixCount = prefixCount
	return &this
}

// NewIPAddressVrfWithDefaults instantiates a new IPAddressVrf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPAddressVrfWithDefaults() *IPAddressVrf {
	this := IPAddressVrf{}
	return &this
}

// GetId returns the Id field value
func (o *IPAddressVrf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IPAddressVrf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IPAddressVrf) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *IPAddressVrf) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *IPAddressVrf) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *IPAddressVrf) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value
func (o *IPAddressVrf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IPAddressVrf) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IPAddressVrf) SetName(v string) {
	o.Name = v
}

// GetRd returns the Rd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IPAddressVrf) GetRd() string {
	if o == nil || o.Rd.Get() == nil {
		var ret string
		return ret
	}
	return *o.Rd.Get()
}

// GetRdOk returns a tuple with the Rd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IPAddressVrf) GetRdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rd.Get(), o.Rd.IsSet()
}

// HasRd returns a boolean if a field has been set.
func (o *IPAddressVrf) HasRd() bool {
	if o != nil && o.Rd.IsSet() {
		return true
	}

	return false
}

// SetRd gets a reference to the given NullableString and assigns it to the Rd field.
func (o *IPAddressVrf) SetRd(v string) {
	o.Rd.Set(&v)
}
// SetRdNil sets the value for Rd to be an explicit nil
func (o *IPAddressVrf) SetRdNil() {
	o.Rd.Set(nil)
}

// UnsetRd ensures that no value is present for Rd, not even an explicit nil
func (o *IPAddressVrf) UnsetRd() {
	o.Rd.Unset()
}

// GetDisplay returns the Display field value
func (o *IPAddressVrf) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *IPAddressVrf) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *IPAddressVrf) SetDisplay(v string) {
	o.Display = v
}

// GetPrefixCount returns the PrefixCount field value
func (o *IPAddressVrf) GetPrefixCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PrefixCount
}

// GetPrefixCountOk returns a tuple with the PrefixCount field value
// and a boolean to check if the value has been set.
func (o *IPAddressVrf) GetPrefixCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrefixCount, true
}

// SetPrefixCount sets field value
func (o *IPAddressVrf) SetPrefixCount(v int32) {
	o.PrefixCount = v
}

func (o IPAddressVrf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Rd.IsSet() {
		toSerialize["rd"] = o.Rd.Get()
	}
	if true {
		toSerialize["display"] = o.Display
	}
	if true {
		toSerialize["prefix_count"] = o.PrefixCount
	}
	return json.Marshal(toSerialize)
}

type NullableIPAddressVrf struct {
	value *IPAddressVrf
	isSet bool
}

func (v NullableIPAddressVrf) Get() *IPAddressVrf {
	return v.value
}

func (v *NullableIPAddressVrf) Set(val *IPAddressVrf) {
	v.value = val
	v.isSet = true
}

func (v NullableIPAddressVrf) IsSet() bool {
	return v.isSet
}

func (v *NullableIPAddressVrf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPAddressVrf(val *IPAddressVrf) *NullableIPAddressVrf {
	return &NullableIPAddressVrf{value: val, isSet: true}
}

func (v NullableIPAddressVrf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPAddressVrf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


