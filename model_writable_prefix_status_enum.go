/*
API Documentation

Source of truth and network automation platform

API version: 1.3.10b1 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// WritablePrefixStatusEnum the model 'WritablePrefixStatusEnum'
type WritablePrefixStatusEnum string

// List of WritablePrefixStatusEnum
const (
	ACTIVE WritablePrefixStatusEnum = "active"
	CONTAINER WritablePrefixStatusEnum = "container"
	DEPRECATED WritablePrefixStatusEnum = "deprecated"
	RESERVED WritablePrefixStatusEnum = "reserved"
)

// All allowed values of WritablePrefixStatusEnum enum
var AllowedWritablePrefixStatusEnumEnumValues = []WritablePrefixStatusEnum{
	"active",
	"container",
	"deprecated",
	"reserved",
}

func (v *WritablePrefixStatusEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WritablePrefixStatusEnum(value)
	for _, existing := range AllowedWritablePrefixStatusEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WritablePrefixStatusEnum", value)
}

// NewWritablePrefixStatusEnumFromValue returns a pointer to a valid WritablePrefixStatusEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWritablePrefixStatusEnumFromValue(v string) (*WritablePrefixStatusEnum, error) {
	ev := WritablePrefixStatusEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WritablePrefixStatusEnum: valid values are %v", v, AllowedWritablePrefixStatusEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WritablePrefixStatusEnum) IsValid() bool {
	for _, existing := range AllowedWritablePrefixStatusEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WritablePrefixStatusEnum value
func (v WritablePrefixStatusEnum) Ptr() *WritablePrefixStatusEnum {
	return &v
}

type NullableWritablePrefixStatusEnum struct {
	value *WritablePrefixStatusEnum
	isSet bool
}

func (v NullableWritablePrefixStatusEnum) Get() *WritablePrefixStatusEnum {
	return v.value
}

func (v *NullableWritablePrefixStatusEnum) Set(val *WritablePrefixStatusEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableWritablePrefixStatusEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableWritablePrefixStatusEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWritablePrefixStatusEnum(val *WritablePrefixStatusEnum) *NullableWritablePrefixStatusEnum {
	return &NullableWritablePrefixStatusEnum{value: val, isSet: true}
}

func (v NullableWritablePrefixStatusEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWritablePrefixStatusEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

