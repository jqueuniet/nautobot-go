/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PatchedWritableSecretsGroupAssociation Serializer for `SecretsGroupAssociation` objects.
type PatchedWritableSecretsGroupAssociation struct {
	Id *string `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
	Group *string `json:"group,omitempty"`
	AccessType *AccessTypeEnum `json:"access_type,omitempty"`
	SecretType *SecretTypeEnum `json:"secret_type,omitempty"`
	Secret *string `json:"secret,omitempty"`
	// Human friendly display value
	Display *string `json:"display,omitempty"`
}

// NewPatchedWritableSecretsGroupAssociation instantiates a new PatchedWritableSecretsGroupAssociation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWritableSecretsGroupAssociation() *PatchedWritableSecretsGroupAssociation {
	this := PatchedWritableSecretsGroupAssociation{}
	return &this
}

// NewPatchedWritableSecretsGroupAssociationWithDefaults instantiates a new PatchedWritableSecretsGroupAssociation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWritableSecretsGroupAssociationWithDefaults() *PatchedWritableSecretsGroupAssociation {
	this := PatchedWritableSecretsGroupAssociation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PatchedWritableSecretsGroupAssociation) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableSecretsGroupAssociation) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PatchedWritableSecretsGroupAssociation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PatchedWritableSecretsGroupAssociation) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PatchedWritableSecretsGroupAssociation) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableSecretsGroupAssociation) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PatchedWritableSecretsGroupAssociation) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PatchedWritableSecretsGroupAssociation) SetUrl(v string) {
	o.Url = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *PatchedWritableSecretsGroupAssociation) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableSecretsGroupAssociation) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *PatchedWritableSecretsGroupAssociation) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *PatchedWritableSecretsGroupAssociation) SetGroup(v string) {
	o.Group = &v
}

// GetAccessType returns the AccessType field value if set, zero value otherwise.
func (o *PatchedWritableSecretsGroupAssociation) GetAccessType() AccessTypeEnum {
	if o == nil || o.AccessType == nil {
		var ret AccessTypeEnum
		return ret
	}
	return *o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableSecretsGroupAssociation) GetAccessTypeOk() (*AccessTypeEnum, bool) {
	if o == nil || o.AccessType == nil {
		return nil, false
	}
	return o.AccessType, true
}

// HasAccessType returns a boolean if a field has been set.
func (o *PatchedWritableSecretsGroupAssociation) HasAccessType() bool {
	if o != nil && o.AccessType != nil {
		return true
	}

	return false
}

// SetAccessType gets a reference to the given AccessTypeEnum and assigns it to the AccessType field.
func (o *PatchedWritableSecretsGroupAssociation) SetAccessType(v AccessTypeEnum) {
	o.AccessType = &v
}

// GetSecretType returns the SecretType field value if set, zero value otherwise.
func (o *PatchedWritableSecretsGroupAssociation) GetSecretType() SecretTypeEnum {
	if o == nil || o.SecretType == nil {
		var ret SecretTypeEnum
		return ret
	}
	return *o.SecretType
}

// GetSecretTypeOk returns a tuple with the SecretType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableSecretsGroupAssociation) GetSecretTypeOk() (*SecretTypeEnum, bool) {
	if o == nil || o.SecretType == nil {
		return nil, false
	}
	return o.SecretType, true
}

// HasSecretType returns a boolean if a field has been set.
func (o *PatchedWritableSecretsGroupAssociation) HasSecretType() bool {
	if o != nil && o.SecretType != nil {
		return true
	}

	return false
}

// SetSecretType gets a reference to the given SecretTypeEnum and assigns it to the SecretType field.
func (o *PatchedWritableSecretsGroupAssociation) SetSecretType(v SecretTypeEnum) {
	o.SecretType = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *PatchedWritableSecretsGroupAssociation) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableSecretsGroupAssociation) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *PatchedWritableSecretsGroupAssociation) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *PatchedWritableSecretsGroupAssociation) SetSecret(v string) {
	o.Secret = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *PatchedWritableSecretsGroupAssociation) GetDisplay() string {
	if o == nil || o.Display == nil {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritableSecretsGroupAssociation) GetDisplayOk() (*string, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *PatchedWritableSecretsGroupAssociation) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *PatchedWritableSecretsGroupAssociation) SetDisplay(v string) {
	o.Display = &v
}

func (o PatchedWritableSecretsGroupAssociation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.AccessType != nil {
		toSerialize["access_type"] = o.AccessType
	}
	if o.SecretType != nil {
		toSerialize["secret_type"] = o.SecretType
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedWritableSecretsGroupAssociation struct {
	value *PatchedWritableSecretsGroupAssociation
	isSet bool
}

func (v NullablePatchedWritableSecretsGroupAssociation) Get() *PatchedWritableSecretsGroupAssociation {
	return v.value
}

func (v *NullablePatchedWritableSecretsGroupAssociation) Set(val *PatchedWritableSecretsGroupAssociation) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableSecretsGroupAssociation) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableSecretsGroupAssociation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableSecretsGroupAssociation(val *PatchedWritableSecretsGroupAssociation) *NullablePatchedWritableSecretsGroupAssociation {
	return &NullablePatchedWritableSecretsGroupAssociation{value: val, isSet: true}
}

func (v NullablePatchedWritableSecretsGroupAssociation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableSecretsGroupAssociation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


