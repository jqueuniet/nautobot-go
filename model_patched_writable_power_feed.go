/*
API Documentation

Source of truth and network automation platform

API version: 1.3.10b1 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PatchedWritablePowerFeed Mixin to add `status` choice field to model serializers.
type PatchedWritablePowerFeed struct {
	Id *string `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
	PowerPanel *string `json:"power_panel,omitempty"`
	Rack NullableString `json:"rack,omitempty"`
	Name *string `json:"name,omitempty"`
	Status *WritablePowerFeedStatusEnum `json:"status,omitempty"`
	Type *PowerFeedTypeChoices `json:"type,omitempty"`
	Supply *SupplyEnum `json:"supply,omitempty"`
	Phase *PhaseEnum `json:"phase,omitempty"`
	Voltage *int32 `json:"voltage,omitempty"`
	Amperage *int32 `json:"amperage,omitempty"`
	// Maximum permissible draw (percentage)
	MaxUtilization *int32 `json:"max_utilization,omitempty"`
	Comments *string `json:"comments,omitempty"`
	Cable *CircuitTerminationCable `json:"cable,omitempty"`
	CablePeer map[string]interface{} `json:"cable_peer,omitempty"`
	CablePeerType NullableString `json:"cable_peer_type,omitempty"`
	ConnectedEndpoint map[string]interface{} `json:"connected_endpoint,omitempty"`
	ConnectedEndpointType NullableString `json:"connected_endpoint_type,omitempty"`
	ConnectedEndpointReachable NullableBool `json:"connected_endpoint_reachable,omitempty"`
	Tags []TagSerializerField `json:"tags,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Created *string `json:"created,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
	ComputedFields map[string]interface{} `json:"computed_fields,omitempty"`
	// Human friendly display value
	Display *string `json:"display,omitempty"`
}

// NewPatchedWritablePowerFeed instantiates a new PatchedWritablePowerFeed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedWritablePowerFeed() *PatchedWritablePowerFeed {
	this := PatchedWritablePowerFeed{}
	return &this
}

// NewPatchedWritablePowerFeedWithDefaults instantiates a new PatchedWritablePowerFeed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedWritablePowerFeedWithDefaults() *PatchedWritablePowerFeed {
	this := PatchedWritablePowerFeed{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PatchedWritablePowerFeed) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PatchedWritablePowerFeed) SetUrl(v string) {
	o.Url = &v
}

// GetPowerPanel returns the PowerPanel field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetPowerPanel() string {
	if o == nil || o.PowerPanel == nil {
		var ret string
		return ret
	}
	return *o.PowerPanel
}

// GetPowerPanelOk returns a tuple with the PowerPanel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetPowerPanelOk() (*string, bool) {
	if o == nil || o.PowerPanel == nil {
		return nil, false
	}
	return o.PowerPanel, true
}

// HasPowerPanel returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasPowerPanel() bool {
	if o != nil && o.PowerPanel != nil {
		return true
	}

	return false
}

// SetPowerPanel gets a reference to the given string and assigns it to the PowerPanel field.
func (o *PatchedWritablePowerFeed) SetPowerPanel(v string) {
	o.PowerPanel = &v
}

// GetRack returns the Rack field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritablePowerFeed) GetRack() string {
	if o == nil || o.Rack.Get() == nil {
		var ret string
		return ret
	}
	return *o.Rack.Get()
}

// GetRackOk returns a tuple with the Rack field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritablePowerFeed) GetRackOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rack.Get(), o.Rack.IsSet()
}

// HasRack returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasRack() bool {
	if o != nil && o.Rack.IsSet() {
		return true
	}

	return false
}

// SetRack gets a reference to the given NullableString and assigns it to the Rack field.
func (o *PatchedWritablePowerFeed) SetRack(v string) {
	o.Rack.Set(&v)
}
// SetRackNil sets the value for Rack to be an explicit nil
func (o *PatchedWritablePowerFeed) SetRackNil() {
	o.Rack.Set(nil)
}

// UnsetRack ensures that no value is present for Rack, not even an explicit nil
func (o *PatchedWritablePowerFeed) UnsetRack() {
	o.Rack.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedWritablePowerFeed) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetStatus() WritablePowerFeedStatusEnum {
	if o == nil || o.Status == nil {
		var ret WritablePowerFeedStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetStatusOk() (*WritablePowerFeedStatusEnum, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WritablePowerFeedStatusEnum and assigns it to the Status field.
func (o *PatchedWritablePowerFeed) SetStatus(v WritablePowerFeedStatusEnum) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetType() PowerFeedTypeChoices {
	if o == nil || o.Type == nil {
		var ret PowerFeedTypeChoices
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetTypeOk() (*PowerFeedTypeChoices, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given PowerFeedTypeChoices and assigns it to the Type field.
func (o *PatchedWritablePowerFeed) SetType(v PowerFeedTypeChoices) {
	o.Type = &v
}

// GetSupply returns the Supply field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetSupply() SupplyEnum {
	if o == nil || o.Supply == nil {
		var ret SupplyEnum
		return ret
	}
	return *o.Supply
}

// GetSupplyOk returns a tuple with the Supply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetSupplyOk() (*SupplyEnum, bool) {
	if o == nil || o.Supply == nil {
		return nil, false
	}
	return o.Supply, true
}

// HasSupply returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasSupply() bool {
	if o != nil && o.Supply != nil {
		return true
	}

	return false
}

// SetSupply gets a reference to the given SupplyEnum and assigns it to the Supply field.
func (o *PatchedWritablePowerFeed) SetSupply(v SupplyEnum) {
	o.Supply = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetPhase() PhaseEnum {
	if o == nil || o.Phase == nil {
		var ret PhaseEnum
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetPhaseOk() (*PhaseEnum, bool) {
	if o == nil || o.Phase == nil {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasPhase() bool {
	if o != nil && o.Phase != nil {
		return true
	}

	return false
}

// SetPhase gets a reference to the given PhaseEnum and assigns it to the Phase field.
func (o *PatchedWritablePowerFeed) SetPhase(v PhaseEnum) {
	o.Phase = &v
}

// GetVoltage returns the Voltage field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetVoltage() int32 {
	if o == nil || o.Voltage == nil {
		var ret int32
		return ret
	}
	return *o.Voltage
}

// GetVoltageOk returns a tuple with the Voltage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetVoltageOk() (*int32, bool) {
	if o == nil || o.Voltage == nil {
		return nil, false
	}
	return o.Voltage, true
}

// HasVoltage returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasVoltage() bool {
	if o != nil && o.Voltage != nil {
		return true
	}

	return false
}

// SetVoltage gets a reference to the given int32 and assigns it to the Voltage field.
func (o *PatchedWritablePowerFeed) SetVoltage(v int32) {
	o.Voltage = &v
}

// GetAmperage returns the Amperage field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetAmperage() int32 {
	if o == nil || o.Amperage == nil {
		var ret int32
		return ret
	}
	return *o.Amperage
}

// GetAmperageOk returns a tuple with the Amperage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetAmperageOk() (*int32, bool) {
	if o == nil || o.Amperage == nil {
		return nil, false
	}
	return o.Amperage, true
}

// HasAmperage returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasAmperage() bool {
	if o != nil && o.Amperage != nil {
		return true
	}

	return false
}

// SetAmperage gets a reference to the given int32 and assigns it to the Amperage field.
func (o *PatchedWritablePowerFeed) SetAmperage(v int32) {
	o.Amperage = &v
}

// GetMaxUtilization returns the MaxUtilization field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetMaxUtilization() int32 {
	if o == nil || o.MaxUtilization == nil {
		var ret int32
		return ret
	}
	return *o.MaxUtilization
}

// GetMaxUtilizationOk returns a tuple with the MaxUtilization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetMaxUtilizationOk() (*int32, bool) {
	if o == nil || o.MaxUtilization == nil {
		return nil, false
	}
	return o.MaxUtilization, true
}

// HasMaxUtilization returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasMaxUtilization() bool {
	if o != nil && o.MaxUtilization != nil {
		return true
	}

	return false
}

// SetMaxUtilization gets a reference to the given int32 and assigns it to the MaxUtilization field.
func (o *PatchedWritablePowerFeed) SetMaxUtilization(v int32) {
	o.MaxUtilization = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetComments() string {
	if o == nil || o.Comments == nil {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetCommentsOk() (*string, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *PatchedWritablePowerFeed) SetComments(v string) {
	o.Comments = &v
}

// GetCable returns the Cable field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetCable() CircuitTerminationCable {
	if o == nil || o.Cable == nil {
		var ret CircuitTerminationCable
		return ret
	}
	return *o.Cable
}

// GetCableOk returns a tuple with the Cable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetCableOk() (*CircuitTerminationCable, bool) {
	if o == nil || o.Cable == nil {
		return nil, false
	}
	return o.Cable, true
}

// HasCable returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasCable() bool {
	if o != nil && o.Cable != nil {
		return true
	}

	return false
}

// SetCable gets a reference to the given CircuitTerminationCable and assigns it to the Cable field.
func (o *PatchedWritablePowerFeed) SetCable(v CircuitTerminationCable) {
	o.Cable = &v
}

// GetCablePeer returns the CablePeer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritablePowerFeed) GetCablePeer() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CablePeer
}

// GetCablePeerOk returns a tuple with the CablePeer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritablePowerFeed) GetCablePeerOk() (map[string]interface{}, bool) {
	if o == nil || o.CablePeer == nil {
		return nil, false
	}
	return o.CablePeer, true
}

// HasCablePeer returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasCablePeer() bool {
	if o != nil && o.CablePeer != nil {
		return true
	}

	return false
}

// SetCablePeer gets a reference to the given map[string]interface{} and assigns it to the CablePeer field.
func (o *PatchedWritablePowerFeed) SetCablePeer(v map[string]interface{}) {
	o.CablePeer = v
}

// GetCablePeerType returns the CablePeerType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritablePowerFeed) GetCablePeerType() string {
	if o == nil || o.CablePeerType.Get() == nil {
		var ret string
		return ret
	}
	return *o.CablePeerType.Get()
}

// GetCablePeerTypeOk returns a tuple with the CablePeerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritablePowerFeed) GetCablePeerTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CablePeerType.Get(), o.CablePeerType.IsSet()
}

// HasCablePeerType returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasCablePeerType() bool {
	if o != nil && o.CablePeerType.IsSet() {
		return true
	}

	return false
}

// SetCablePeerType gets a reference to the given NullableString and assigns it to the CablePeerType field.
func (o *PatchedWritablePowerFeed) SetCablePeerType(v string) {
	o.CablePeerType.Set(&v)
}
// SetCablePeerTypeNil sets the value for CablePeerType to be an explicit nil
func (o *PatchedWritablePowerFeed) SetCablePeerTypeNil() {
	o.CablePeerType.Set(nil)
}

// UnsetCablePeerType ensures that no value is present for CablePeerType, not even an explicit nil
func (o *PatchedWritablePowerFeed) UnsetCablePeerType() {
	o.CablePeerType.Unset()
}

// GetConnectedEndpoint returns the ConnectedEndpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritablePowerFeed) GetConnectedEndpoint() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ConnectedEndpoint
}

// GetConnectedEndpointOk returns a tuple with the ConnectedEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritablePowerFeed) GetConnectedEndpointOk() (map[string]interface{}, bool) {
	if o == nil || o.ConnectedEndpoint == nil {
		return nil, false
	}
	return o.ConnectedEndpoint, true
}

// HasConnectedEndpoint returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasConnectedEndpoint() bool {
	if o != nil && o.ConnectedEndpoint != nil {
		return true
	}

	return false
}

// SetConnectedEndpoint gets a reference to the given map[string]interface{} and assigns it to the ConnectedEndpoint field.
func (o *PatchedWritablePowerFeed) SetConnectedEndpoint(v map[string]interface{}) {
	o.ConnectedEndpoint = v
}

// GetConnectedEndpointType returns the ConnectedEndpointType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritablePowerFeed) GetConnectedEndpointType() string {
	if o == nil || o.ConnectedEndpointType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConnectedEndpointType.Get()
}

// GetConnectedEndpointTypeOk returns a tuple with the ConnectedEndpointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritablePowerFeed) GetConnectedEndpointTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectedEndpointType.Get(), o.ConnectedEndpointType.IsSet()
}

// HasConnectedEndpointType returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasConnectedEndpointType() bool {
	if o != nil && o.ConnectedEndpointType.IsSet() {
		return true
	}

	return false
}

// SetConnectedEndpointType gets a reference to the given NullableString and assigns it to the ConnectedEndpointType field.
func (o *PatchedWritablePowerFeed) SetConnectedEndpointType(v string) {
	o.ConnectedEndpointType.Set(&v)
}
// SetConnectedEndpointTypeNil sets the value for ConnectedEndpointType to be an explicit nil
func (o *PatchedWritablePowerFeed) SetConnectedEndpointTypeNil() {
	o.ConnectedEndpointType.Set(nil)
}

// UnsetConnectedEndpointType ensures that no value is present for ConnectedEndpointType, not even an explicit nil
func (o *PatchedWritablePowerFeed) UnsetConnectedEndpointType() {
	o.ConnectedEndpointType.Unset()
}

// GetConnectedEndpointReachable returns the ConnectedEndpointReachable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedWritablePowerFeed) GetConnectedEndpointReachable() bool {
	if o == nil || o.ConnectedEndpointReachable.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ConnectedEndpointReachable.Get()
}

// GetConnectedEndpointReachableOk returns a tuple with the ConnectedEndpointReachable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedWritablePowerFeed) GetConnectedEndpointReachableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectedEndpointReachable.Get(), o.ConnectedEndpointReachable.IsSet()
}

// HasConnectedEndpointReachable returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasConnectedEndpointReachable() bool {
	if o != nil && o.ConnectedEndpointReachable.IsSet() {
		return true
	}

	return false
}

// SetConnectedEndpointReachable gets a reference to the given NullableBool and assigns it to the ConnectedEndpointReachable field.
func (o *PatchedWritablePowerFeed) SetConnectedEndpointReachable(v bool) {
	o.ConnectedEndpointReachable.Set(&v)
}
// SetConnectedEndpointReachableNil sets the value for ConnectedEndpointReachable to be an explicit nil
func (o *PatchedWritablePowerFeed) SetConnectedEndpointReachableNil() {
	o.ConnectedEndpointReachable.Set(nil)
}

// UnsetConnectedEndpointReachable ensures that no value is present for ConnectedEndpointReachable, not even an explicit nil
func (o *PatchedWritablePowerFeed) UnsetConnectedEndpointReachable() {
	o.ConnectedEndpointReachable.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetTags() []TagSerializerField {
	if o == nil || o.Tags == nil {
		var ret []TagSerializerField
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetTagsOk() ([]TagSerializerField, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagSerializerField and assigns it to the Tags field.
func (o *PatchedWritablePowerFeed) SetTags(v []TagSerializerField) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetCustomFields() map[string]interface{} {
	if o == nil || o.CustomFields == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomFields == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasCustomFields() bool {
	if o != nil && o.CustomFields != nil {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PatchedWritablePowerFeed) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *PatchedWritablePowerFeed) SetCreated(v string) {
	o.Created = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *PatchedWritablePowerFeed) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetComputedFields returns the ComputedFields field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetComputedFields() map[string]interface{} {
	if o == nil || o.ComputedFields == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ComputedFields
}

// GetComputedFieldsOk returns a tuple with the ComputedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetComputedFieldsOk() (map[string]interface{}, bool) {
	if o == nil || o.ComputedFields == nil {
		return nil, false
	}
	return o.ComputedFields, true
}

// HasComputedFields returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasComputedFields() bool {
	if o != nil && o.ComputedFields != nil {
		return true
	}

	return false
}

// SetComputedFields gets a reference to the given map[string]interface{} and assigns it to the ComputedFields field.
func (o *PatchedWritablePowerFeed) SetComputedFields(v map[string]interface{}) {
	o.ComputedFields = v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *PatchedWritablePowerFeed) GetDisplay() string {
	if o == nil || o.Display == nil {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedWritablePowerFeed) GetDisplayOk() (*string, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *PatchedWritablePowerFeed) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *PatchedWritablePowerFeed) SetDisplay(v string) {
	o.Display = &v
}

func (o PatchedWritablePowerFeed) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.PowerPanel != nil {
		toSerialize["power_panel"] = o.PowerPanel
	}
	if o.Rack.IsSet() {
		toSerialize["rack"] = o.Rack.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Supply != nil {
		toSerialize["supply"] = o.Supply
	}
	if o.Phase != nil {
		toSerialize["phase"] = o.Phase
	}
	if o.Voltage != nil {
		toSerialize["voltage"] = o.Voltage
	}
	if o.Amperage != nil {
		toSerialize["amperage"] = o.Amperage
	}
	if o.MaxUtilization != nil {
		toSerialize["max_utilization"] = o.MaxUtilization
	}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.Cable != nil {
		toSerialize["cable"] = o.Cable
	}
	if o.CablePeer != nil {
		toSerialize["cable_peer"] = o.CablePeer
	}
	if o.CablePeerType.IsSet() {
		toSerialize["cable_peer_type"] = o.CablePeerType.Get()
	}
	if o.ConnectedEndpoint != nil {
		toSerialize["connected_endpoint"] = o.ConnectedEndpoint
	}
	if o.ConnectedEndpointType.IsSet() {
		toSerialize["connected_endpoint_type"] = o.ConnectedEndpointType.Get()
	}
	if o.ConnectedEndpointReachable.IsSet() {
		toSerialize["connected_endpoint_reachable"] = o.ConnectedEndpointReachable.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.LastUpdated != nil {
		toSerialize["last_updated"] = o.LastUpdated
	}
	if o.ComputedFields != nil {
		toSerialize["computed_fields"] = o.ComputedFields
	}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedWritablePowerFeed struct {
	value *PatchedWritablePowerFeed
	isSet bool
}

func (v NullablePatchedWritablePowerFeed) Get() *PatchedWritablePowerFeed {
	return v.value
}

func (v *NullablePatchedWritablePowerFeed) Set(val *PatchedWritablePowerFeed) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritablePowerFeed) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritablePowerFeed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritablePowerFeed(val *PatchedWritablePowerFeed) *NullablePatchedWritablePowerFeed {
	return &NullablePatchedWritablePowerFeed{value: val, isSet: true}
}

func (v NullablePatchedWritablePowerFeed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritablePowerFeed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


