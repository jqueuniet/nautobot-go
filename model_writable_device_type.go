/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// WritableDeviceType Extends ModelSerializer to render any CustomFields and their values associated with an object.
type WritableDeviceType struct {
	Id string `json:"id"`
	Url string `json:"url"`
	Manufacturer string `json:"manufacturer"`
	Model string `json:"model"`
	Slug *string `json:"slug,omitempty"`
	// Discrete part number (optional)
	PartNumber *string `json:"part_number,omitempty"`
	UHeight *int32 `json:"u_height,omitempty"`
	// Device consumes both front and rear rack faces
	IsFullDepth *bool `json:"is_full_depth,omitempty"`
	SubdeviceRole *ParentChildStatus `json:"subdevice_role,omitempty"`
	FrontImage *string `json:"front_image,omitempty"`
	RearImage *string `json:"rear_image,omitempty"`
	Comments *string `json:"comments,omitempty"`
	Tags []TagSerializerField `json:"tags,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Created string `json:"created"`
	LastUpdated time.Time `json:"last_updated"`
	DeviceCount int32 `json:"device_count"`
	ComputedFields map[string]interface{} `json:"computed_fields"`
	// Human friendly display value
	Display string `json:"display"`
}

// NewWritableDeviceType instantiates a new WritableDeviceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWritableDeviceType(id string, url string, manufacturer string, model string, created string, lastUpdated time.Time, deviceCount int32, computedFields map[string]interface{}, display string) *WritableDeviceType {
	this := WritableDeviceType{}
	this.Id = id
	this.Url = url
	this.Manufacturer = manufacturer
	this.Model = model
	this.Created = created
	this.LastUpdated = lastUpdated
	this.DeviceCount = deviceCount
	this.ComputedFields = computedFields
	this.Display = display
	return &this
}

// NewWritableDeviceTypeWithDefaults instantiates a new WritableDeviceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritableDeviceTypeWithDefaults() *WritableDeviceType {
	this := WritableDeviceType{}
	return &this
}

// GetId returns the Id field value
func (o *WritableDeviceType) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WritableDeviceType) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *WritableDeviceType) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WritableDeviceType) SetUrl(v string) {
	o.Url = v
}

// GetManufacturer returns the Manufacturer field value
func (o *WritableDeviceType) GetManufacturer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetManufacturerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Manufacturer, true
}

// SetManufacturer sets field value
func (o *WritableDeviceType) SetManufacturer(v string) {
	o.Manufacturer = v
}

// GetModel returns the Model field value
func (o *WritableDeviceType) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *WritableDeviceType) SetModel(v string) {
	o.Model = v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *WritableDeviceType) GetSlug() string {
	if o == nil || o.Slug == nil {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetSlugOk() (*string, bool) {
	if o == nil || o.Slug == nil {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *WritableDeviceType) HasSlug() bool {
	if o != nil && o.Slug != nil {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *WritableDeviceType) SetSlug(v string) {
	o.Slug = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *WritableDeviceType) GetPartNumber() string {
	if o == nil || o.PartNumber == nil {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetPartNumberOk() (*string, bool) {
	if o == nil || o.PartNumber == nil {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *WritableDeviceType) HasPartNumber() bool {
	if o != nil && o.PartNumber != nil {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *WritableDeviceType) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetUHeight returns the UHeight field value if set, zero value otherwise.
func (o *WritableDeviceType) GetUHeight() int32 {
	if o == nil || o.UHeight == nil {
		var ret int32
		return ret
	}
	return *o.UHeight
}

// GetUHeightOk returns a tuple with the UHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetUHeightOk() (*int32, bool) {
	if o == nil || o.UHeight == nil {
		return nil, false
	}
	return o.UHeight, true
}

// HasUHeight returns a boolean if a field has been set.
func (o *WritableDeviceType) HasUHeight() bool {
	if o != nil && o.UHeight != nil {
		return true
	}

	return false
}

// SetUHeight gets a reference to the given int32 and assigns it to the UHeight field.
func (o *WritableDeviceType) SetUHeight(v int32) {
	o.UHeight = &v
}

// GetIsFullDepth returns the IsFullDepth field value if set, zero value otherwise.
func (o *WritableDeviceType) GetIsFullDepth() bool {
	if o == nil || o.IsFullDepth == nil {
		var ret bool
		return ret
	}
	return *o.IsFullDepth
}

// GetIsFullDepthOk returns a tuple with the IsFullDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetIsFullDepthOk() (*bool, bool) {
	if o == nil || o.IsFullDepth == nil {
		return nil, false
	}
	return o.IsFullDepth, true
}

// HasIsFullDepth returns a boolean if a field has been set.
func (o *WritableDeviceType) HasIsFullDepth() bool {
	if o != nil && o.IsFullDepth != nil {
		return true
	}

	return false
}

// SetIsFullDepth gets a reference to the given bool and assigns it to the IsFullDepth field.
func (o *WritableDeviceType) SetIsFullDepth(v bool) {
	o.IsFullDepth = &v
}

// GetSubdeviceRole returns the SubdeviceRole field value if set, zero value otherwise.
func (o *WritableDeviceType) GetSubdeviceRole() ParentChildStatus {
	if o == nil || o.SubdeviceRole == nil {
		var ret ParentChildStatus
		return ret
	}
	return *o.SubdeviceRole
}

// GetSubdeviceRoleOk returns a tuple with the SubdeviceRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetSubdeviceRoleOk() (*ParentChildStatus, bool) {
	if o == nil || o.SubdeviceRole == nil {
		return nil, false
	}
	return o.SubdeviceRole, true
}

// HasSubdeviceRole returns a boolean if a field has been set.
func (o *WritableDeviceType) HasSubdeviceRole() bool {
	if o != nil && o.SubdeviceRole != nil {
		return true
	}

	return false
}

// SetSubdeviceRole gets a reference to the given ParentChildStatus and assigns it to the SubdeviceRole field.
func (o *WritableDeviceType) SetSubdeviceRole(v ParentChildStatus) {
	o.SubdeviceRole = &v
}

// GetFrontImage returns the FrontImage field value if set, zero value otherwise.
func (o *WritableDeviceType) GetFrontImage() string {
	if o == nil || o.FrontImage == nil {
		var ret string
		return ret
	}
	return *o.FrontImage
}

// GetFrontImageOk returns a tuple with the FrontImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetFrontImageOk() (*string, bool) {
	if o == nil || o.FrontImage == nil {
		return nil, false
	}
	return o.FrontImage, true
}

// HasFrontImage returns a boolean if a field has been set.
func (o *WritableDeviceType) HasFrontImage() bool {
	if o != nil && o.FrontImage != nil {
		return true
	}

	return false
}

// SetFrontImage gets a reference to the given string and assigns it to the FrontImage field.
func (o *WritableDeviceType) SetFrontImage(v string) {
	o.FrontImage = &v
}

// GetRearImage returns the RearImage field value if set, zero value otherwise.
func (o *WritableDeviceType) GetRearImage() string {
	if o == nil || o.RearImage == nil {
		var ret string
		return ret
	}
	return *o.RearImage
}

// GetRearImageOk returns a tuple with the RearImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetRearImageOk() (*string, bool) {
	if o == nil || o.RearImage == nil {
		return nil, false
	}
	return o.RearImage, true
}

// HasRearImage returns a boolean if a field has been set.
func (o *WritableDeviceType) HasRearImage() bool {
	if o != nil && o.RearImage != nil {
		return true
	}

	return false
}

// SetRearImage gets a reference to the given string and assigns it to the RearImage field.
func (o *WritableDeviceType) SetRearImage(v string) {
	o.RearImage = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *WritableDeviceType) GetComments() string {
	if o == nil || o.Comments == nil {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetCommentsOk() (*string, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *WritableDeviceType) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *WritableDeviceType) SetComments(v string) {
	o.Comments = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *WritableDeviceType) GetTags() []TagSerializerField {
	if o == nil || o.Tags == nil {
		var ret []TagSerializerField
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetTagsOk() ([]TagSerializerField, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *WritableDeviceType) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagSerializerField and assigns it to the Tags field.
func (o *WritableDeviceType) SetTags(v []TagSerializerField) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *WritableDeviceType) GetCustomFields() map[string]interface{} {
	if o == nil || o.CustomFields == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomFields == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *WritableDeviceType) HasCustomFields() bool {
	if o != nil && o.CustomFields != nil {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *WritableDeviceType) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetCreated returns the Created field value
func (o *WritableDeviceType) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *WritableDeviceType) SetCreated(v string) {
	o.Created = v
}

// GetLastUpdated returns the LastUpdated field value
func (o *WritableDeviceType) GetLastUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *WritableDeviceType) SetLastUpdated(v time.Time) {
	o.LastUpdated = v
}

// GetDeviceCount returns the DeviceCount field value
func (o *WritableDeviceType) GetDeviceCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DeviceCount
}

// GetDeviceCountOk returns a tuple with the DeviceCount field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetDeviceCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceCount, true
}

// SetDeviceCount sets field value
func (o *WritableDeviceType) SetDeviceCount(v int32) {
	o.DeviceCount = v
}

// GetComputedFields returns the ComputedFields field value
func (o *WritableDeviceType) GetComputedFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ComputedFields
}

// GetComputedFieldsOk returns a tuple with the ComputedFields field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetComputedFieldsOk() (map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComputedFields, true
}

// SetComputedFields sets field value
func (o *WritableDeviceType) SetComputedFields(v map[string]interface{}) {
	o.ComputedFields = v
}

// GetDisplay returns the Display field value
func (o *WritableDeviceType) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *WritableDeviceType) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *WritableDeviceType) SetDisplay(v string) {
	o.Display = v
}

func (o WritableDeviceType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if true {
		toSerialize["model"] = o.Model
	}
	if o.Slug != nil {
		toSerialize["slug"] = o.Slug
	}
	if o.PartNumber != nil {
		toSerialize["part_number"] = o.PartNumber
	}
	if o.UHeight != nil {
		toSerialize["u_height"] = o.UHeight
	}
	if o.IsFullDepth != nil {
		toSerialize["is_full_depth"] = o.IsFullDepth
	}
	if o.SubdeviceRole != nil {
		toSerialize["subdevice_role"] = o.SubdeviceRole
	}
	if o.FrontImage != nil {
		toSerialize["front_image"] = o.FrontImage
	}
	if o.RearImage != nil {
		toSerialize["rear_image"] = o.RearImage
	}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["last_updated"] = o.LastUpdated
	}
	if true {
		toSerialize["device_count"] = o.DeviceCount
	}
	if true {
		toSerialize["computed_fields"] = o.ComputedFields
	}
	if true {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullableWritableDeviceType struct {
	value *WritableDeviceType
	isSet bool
}

func (v NullableWritableDeviceType) Get() *WritableDeviceType {
	return v.value
}

func (v *NullableWritableDeviceType) Set(val *WritableDeviceType) {
	v.value = val
	v.isSet = true
}

func (v NullableWritableDeviceType) IsSet() bool {
	return v.isSet
}

func (v *NullableWritableDeviceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWritableDeviceType(val *WritableDeviceType) *NullableWritableDeviceType {
	return &NullableWritableDeviceType{value: val, isSet: true}
}

func (v NullableWritableDeviceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWritableDeviceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


