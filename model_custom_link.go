/*
API Documentation

Source of truth and network automation platform

API version: 1.3.7 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CustomLink Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type CustomLink struct {
	Id string `json:"id"`
	Url string `json:"url"`
	// Jinja2 template code for link URL. Reference the object as <code>{{ obj }}</code> such as <code>{{ obj.platform.slug }}</code>.
	TargetUrl string `json:"target_url"`
	Name string `json:"name"`
	ContentType string `json:"content_type"`
	// Jinja2 template code for link text. Reference the object as <code>{{ obj }}</code> such as <code>{{ obj.platform.slug }}</code>. Links which render as empty text will not be displayed.
	Text string `json:"text"`
	Weight *int32 `json:"weight,omitempty"`
	// Links with the same group will appear as a dropdown menu
	GroupName *string `json:"group_name,omitempty"`
	// The class of the first link in a group will be used for the dropdown button
	ButtonClass NullableButtonClassEnum `json:"button_class,omitempty"`
	// Force link to open in a new window
	NewWindow bool `json:"new_window"`
	// Human friendly display value
	Display string `json:"display"`
}

// NewCustomLink instantiates a new CustomLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomLink(id string, url string, targetUrl string, name string, contentType string, text string, newWindow bool, display string) *CustomLink {
	this := CustomLink{}
	this.Id = id
	this.Url = url
	this.TargetUrl = targetUrl
	this.Name = name
	this.ContentType = contentType
	this.Text = text
	this.NewWindow = newWindow
	this.Display = display
	return &this
}

// NewCustomLinkWithDefaults instantiates a new CustomLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomLinkWithDefaults() *CustomLink {
	this := CustomLink{}
	return &this
}

// GetId returns the Id field value
func (o *CustomLink) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomLink) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *CustomLink) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CustomLink) SetUrl(v string) {
	o.Url = v
}

// GetTargetUrl returns the TargetUrl field value
func (o *CustomLink) GetTargetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetUrl
}

// GetTargetUrlOk returns a tuple with the TargetUrl field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetTargetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetUrl, true
}

// SetTargetUrl sets field value
func (o *CustomLink) SetTargetUrl(v string) {
	o.TargetUrl = v
}

// GetName returns the Name field value
func (o *CustomLink) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomLink) SetName(v string) {
	o.Name = v
}

// GetContentType returns the ContentType field value
func (o *CustomLink) GetContentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentType, true
}

// SetContentType sets field value
func (o *CustomLink) SetContentType(v string) {
	o.ContentType = v
}

// GetText returns the Text field value
func (o *CustomLink) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *CustomLink) SetText(v string) {
	o.Text = v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *CustomLink) GetWeight() int32 {
	if o == nil || o.Weight == nil {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLink) GetWeightOk() (*int32, bool) {
	if o == nil || o.Weight == nil {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *CustomLink) HasWeight() bool {
	if o != nil && o.Weight != nil {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *CustomLink) SetWeight(v int32) {
	o.Weight = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *CustomLink) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLink) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *CustomLink) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *CustomLink) SetGroupName(v string) {
	o.GroupName = &v
}

// GetButtonClass returns the ButtonClass field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomLink) GetButtonClass() ButtonClassEnum {
	if o == nil || o.ButtonClass.Get() == nil {
		var ret ButtonClassEnum
		return ret
	}
	return *o.ButtonClass.Get()
}

// GetButtonClassOk returns a tuple with the ButtonClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomLink) GetButtonClassOk() (*ButtonClassEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.ButtonClass.Get(), o.ButtonClass.IsSet()
}

// HasButtonClass returns a boolean if a field has been set.
func (o *CustomLink) HasButtonClass() bool {
	if o != nil && o.ButtonClass.IsSet() {
		return true
	}

	return false
}

// SetButtonClass gets a reference to the given NullableButtonClassEnum and assigns it to the ButtonClass field.
func (o *CustomLink) SetButtonClass(v ButtonClassEnum) {
	o.ButtonClass.Set(&v)
}
// SetButtonClassNil sets the value for ButtonClass to be an explicit nil
func (o *CustomLink) SetButtonClassNil() {
	o.ButtonClass.Set(nil)
}

// UnsetButtonClass ensures that no value is present for ButtonClass, not even an explicit nil
func (o *CustomLink) UnsetButtonClass() {
	o.ButtonClass.Unset()
}

// GetNewWindow returns the NewWindow field value
func (o *CustomLink) GetNewWindow() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.NewWindow
}

// GetNewWindowOk returns a tuple with the NewWindow field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetNewWindowOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewWindow, true
}

// SetNewWindow sets field value
func (o *CustomLink) SetNewWindow(v bool) {
	o.NewWindow = v
}

// GetDisplay returns the Display field value
func (o *CustomLink) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *CustomLink) SetDisplay(v string) {
	o.Display = v
}

func (o CustomLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["target_url"] = o.TargetUrl
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["content_type"] = o.ContentType
	}
	if true {
		toSerialize["text"] = o.Text
	}
	if o.Weight != nil {
		toSerialize["weight"] = o.Weight
	}
	if o.GroupName != nil {
		toSerialize["group_name"] = o.GroupName
	}
	if o.ButtonClass.IsSet() {
		toSerialize["button_class"] = o.ButtonClass.Get()
	}
	if true {
		toSerialize["new_window"] = o.NewWindow
	}
	if true {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullableCustomLink struct {
	value *CustomLink
	isSet bool
}

func (v NullableCustomLink) Get() *CustomLink {
	return v.value
}

func (v *NullableCustomLink) Set(val *CustomLink) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomLink) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomLink(val *CustomLink) *NullableCustomLink {
	return &NullableCustomLink{value: val, isSet: true}
}

func (v NullableCustomLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


