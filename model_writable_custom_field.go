/*
API Documentation

Source of truth and network automation platform

API version: 1.3.10b1 (1.2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WritableCustomField Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type WritableCustomField struct {
	Id string `json:"id"`
	Url string `json:"url"`
	ContentTypes []string `json:"content_types"`
	// The type of value(s) allowed for this field.
	Type NullableCustomFieldTypeChoices `json:"type,omitempty"`
	// URL-friendly unique shorthand.
	Name string `json:"name"`
	// Name of the field as displayed to users (if not provided, the field's slug will be used.)
	Label *string `json:"label,omitempty"`
	// A helpful description for this field.
	Description *string `json:"description,omitempty"`
	// If true, this field is required when creating new objects or editing an existing object.
	Required *bool `json:"required,omitempty"`
	// Loose matches any instance of a given string; Exact matches the entire field.
	FilterLogic NullableFilterLogicEnum `json:"filter_logic,omitempty"`
	// Default value for the field (must be a JSON value). Encapsulate strings with double quotes (e.g. \"Foo\").
	Default map[string]interface{} `json:"default,omitempty"`
	// Fields with higher weights appear lower in a form.
	Weight *int32 `json:"weight,omitempty"`
	// Minimum allowed value (for numeric fields).
	ValidationMinimum NullableInt64 `json:"validation_minimum,omitempty"`
	// Maximum allowed value (for numeric fields).
	ValidationMaximum NullableInt64 `json:"validation_maximum,omitempty"`
	// Regular expression to enforce on text field values. Use ^ and $ to force matching of entire string. For example, <code>^[A-Z]{3}$</code> will limit values to exactly three uppercase letters. Regular expression on select and multi-select will be applied at <code>Custom Field Choices</code> definition.
	ValidationRegex *string `json:"validation_regex,omitempty"`
	// Human friendly display value
	Display string `json:"display"`
}

// NewWritableCustomField instantiates a new WritableCustomField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWritableCustomField(id string, url string, contentTypes []string, name string, display string) *WritableCustomField {
	this := WritableCustomField{}
	this.Id = id
	this.Url = url
	this.ContentTypes = contentTypes
	this.Name = name
	this.Display = display
	return &this
}

// NewWritableCustomFieldWithDefaults instantiates a new WritableCustomField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritableCustomFieldWithDefaults() *WritableCustomField {
	this := WritableCustomField{}
	return &this
}

// GetId returns the Id field value
func (o *WritableCustomField) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WritableCustomField) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WritableCustomField) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *WritableCustomField) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WritableCustomField) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WritableCustomField) SetUrl(v string) {
	o.Url = v
}

// GetContentTypes returns the ContentTypes field value
func (o *WritableCustomField) GetContentTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ContentTypes
}

// GetContentTypesOk returns a tuple with the ContentTypes field value
// and a boolean to check if the value has been set.
func (o *WritableCustomField) GetContentTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentTypes, true
}

// SetContentTypes sets field value
func (o *WritableCustomField) SetContentTypes(v []string) {
	o.ContentTypes = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableCustomField) GetType() CustomFieldTypeChoices {
	if o == nil || o.Type.Get() == nil {
		var ret CustomFieldTypeChoices
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableCustomField) GetTypeOk() (*CustomFieldTypeChoices, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *WritableCustomField) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableCustomFieldTypeChoices and assigns it to the Type field.
func (o *WritableCustomField) SetType(v CustomFieldTypeChoices) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *WritableCustomField) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *WritableCustomField) UnsetType() {
	o.Type.Unset()
}

// GetName returns the Name field value
func (o *WritableCustomField) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WritableCustomField) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WritableCustomField) SetName(v string) {
	o.Name = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *WritableCustomField) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableCustomField) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *WritableCustomField) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *WritableCustomField) SetLabel(v string) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WritableCustomField) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableCustomField) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WritableCustomField) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WritableCustomField) SetDescription(v string) {
	o.Description = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *WritableCustomField) GetRequired() bool {
	if o == nil || o.Required == nil {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableCustomField) GetRequiredOk() (*bool, bool) {
	if o == nil || o.Required == nil {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *WritableCustomField) HasRequired() bool {
	if o != nil && o.Required != nil {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *WritableCustomField) SetRequired(v bool) {
	o.Required = &v
}

// GetFilterLogic returns the FilterLogic field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableCustomField) GetFilterLogic() FilterLogicEnum {
	if o == nil || o.FilterLogic.Get() == nil {
		var ret FilterLogicEnum
		return ret
	}
	return *o.FilterLogic.Get()
}

// GetFilterLogicOk returns a tuple with the FilterLogic field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableCustomField) GetFilterLogicOk() (*FilterLogicEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.FilterLogic.Get(), o.FilterLogic.IsSet()
}

// HasFilterLogic returns a boolean if a field has been set.
func (o *WritableCustomField) HasFilterLogic() bool {
	if o != nil && o.FilterLogic.IsSet() {
		return true
	}

	return false
}

// SetFilterLogic gets a reference to the given NullableFilterLogicEnum and assigns it to the FilterLogic field.
func (o *WritableCustomField) SetFilterLogic(v FilterLogicEnum) {
	o.FilterLogic.Set(&v)
}
// SetFilterLogicNil sets the value for FilterLogic to be an explicit nil
func (o *WritableCustomField) SetFilterLogicNil() {
	o.FilterLogic.Set(nil)
}

// UnsetFilterLogic ensures that no value is present for FilterLogic, not even an explicit nil
func (o *WritableCustomField) UnsetFilterLogic() {
	o.FilterLogic.Unset()
}

// GetDefault returns the Default field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableCustomField) GetDefault() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableCustomField) GetDefaultOk() (map[string]interface{}, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *WritableCustomField) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given map[string]interface{} and assigns it to the Default field.
func (o *WritableCustomField) SetDefault(v map[string]interface{}) {
	o.Default = v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *WritableCustomField) GetWeight() int32 {
	if o == nil || o.Weight == nil {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableCustomField) GetWeightOk() (*int32, bool) {
	if o == nil || o.Weight == nil {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *WritableCustomField) HasWeight() bool {
	if o != nil && o.Weight != nil {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *WritableCustomField) SetWeight(v int32) {
	o.Weight = &v
}

// GetValidationMinimum returns the ValidationMinimum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableCustomField) GetValidationMinimum() int64 {
	if o == nil || o.ValidationMinimum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ValidationMinimum.Get()
}

// GetValidationMinimumOk returns a tuple with the ValidationMinimum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableCustomField) GetValidationMinimumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidationMinimum.Get(), o.ValidationMinimum.IsSet()
}

// HasValidationMinimum returns a boolean if a field has been set.
func (o *WritableCustomField) HasValidationMinimum() bool {
	if o != nil && o.ValidationMinimum.IsSet() {
		return true
	}

	return false
}

// SetValidationMinimum gets a reference to the given NullableInt64 and assigns it to the ValidationMinimum field.
func (o *WritableCustomField) SetValidationMinimum(v int64) {
	o.ValidationMinimum.Set(&v)
}
// SetValidationMinimumNil sets the value for ValidationMinimum to be an explicit nil
func (o *WritableCustomField) SetValidationMinimumNil() {
	o.ValidationMinimum.Set(nil)
}

// UnsetValidationMinimum ensures that no value is present for ValidationMinimum, not even an explicit nil
func (o *WritableCustomField) UnsetValidationMinimum() {
	o.ValidationMinimum.Unset()
}

// GetValidationMaximum returns the ValidationMaximum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableCustomField) GetValidationMaximum() int64 {
	if o == nil || o.ValidationMaximum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ValidationMaximum.Get()
}

// GetValidationMaximumOk returns a tuple with the ValidationMaximum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableCustomField) GetValidationMaximumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidationMaximum.Get(), o.ValidationMaximum.IsSet()
}

// HasValidationMaximum returns a boolean if a field has been set.
func (o *WritableCustomField) HasValidationMaximum() bool {
	if o != nil && o.ValidationMaximum.IsSet() {
		return true
	}

	return false
}

// SetValidationMaximum gets a reference to the given NullableInt64 and assigns it to the ValidationMaximum field.
func (o *WritableCustomField) SetValidationMaximum(v int64) {
	o.ValidationMaximum.Set(&v)
}
// SetValidationMaximumNil sets the value for ValidationMaximum to be an explicit nil
func (o *WritableCustomField) SetValidationMaximumNil() {
	o.ValidationMaximum.Set(nil)
}

// UnsetValidationMaximum ensures that no value is present for ValidationMaximum, not even an explicit nil
func (o *WritableCustomField) UnsetValidationMaximum() {
	o.ValidationMaximum.Unset()
}

// GetValidationRegex returns the ValidationRegex field value if set, zero value otherwise.
func (o *WritableCustomField) GetValidationRegex() string {
	if o == nil || o.ValidationRegex == nil {
		var ret string
		return ret
	}
	return *o.ValidationRegex
}

// GetValidationRegexOk returns a tuple with the ValidationRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableCustomField) GetValidationRegexOk() (*string, bool) {
	if o == nil || o.ValidationRegex == nil {
		return nil, false
	}
	return o.ValidationRegex, true
}

// HasValidationRegex returns a boolean if a field has been set.
func (o *WritableCustomField) HasValidationRegex() bool {
	if o != nil && o.ValidationRegex != nil {
		return true
	}

	return false
}

// SetValidationRegex gets a reference to the given string and assigns it to the ValidationRegex field.
func (o *WritableCustomField) SetValidationRegex(v string) {
	o.ValidationRegex = &v
}

// GetDisplay returns the Display field value
func (o *WritableCustomField) GetDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Display
}

// GetDisplayOk returns a tuple with the Display field value
// and a boolean to check if the value has been set.
func (o *WritableCustomField) GetDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Display, true
}

// SetDisplay sets field value
func (o *WritableCustomField) SetDisplay(v string) {
	o.Display = v
}

func (o WritableCustomField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["content_types"] = o.ContentTypes
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Required != nil {
		toSerialize["required"] = o.Required
	}
	if o.FilterLogic.IsSet() {
		toSerialize["filter_logic"] = o.FilterLogic.Get()
	}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	if o.Weight != nil {
		toSerialize["weight"] = o.Weight
	}
	if o.ValidationMinimum.IsSet() {
		toSerialize["validation_minimum"] = o.ValidationMinimum.Get()
	}
	if o.ValidationMaximum.IsSet() {
		toSerialize["validation_maximum"] = o.ValidationMaximum.Get()
	}
	if o.ValidationRegex != nil {
		toSerialize["validation_regex"] = o.ValidationRegex
	}
	if true {
		toSerialize["display"] = o.Display
	}
	return json.Marshal(toSerialize)
}

type NullableWritableCustomField struct {
	value *WritableCustomField
	isSet bool
}

func (v NullableWritableCustomField) Get() *WritableCustomField {
	return v.value
}

func (v *NullableWritableCustomField) Set(val *WritableCustomField) {
	v.value = val
	v.isSet = true
}

func (v NullableWritableCustomField) IsSet() bool {
	return v.isSet
}

func (v *NullableWritableCustomField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWritableCustomField(val *WritableCustomField) *NullableWritableCustomField {
	return &NullableWritableCustomField{value: val, isSet: true}
}

func (v NullableWritableCustomField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWritableCustomField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


